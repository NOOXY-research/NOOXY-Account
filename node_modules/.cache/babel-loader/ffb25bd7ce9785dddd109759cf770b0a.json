{"ast":null,"code":"// /src/flux/service.js\n// Description:\n// \"service.js\"\n// Copyright 2018-2020 NOOXY. All Rights Reserved.\nimport Constants from './constants.json';\nimport Localizes from './data/localizes.json';\n\nfunction Service(NoService, Dispatcher) {\n  var _this = this;\n\n  var Services = {\n    NoUser: null\n  };\n\n  var setupOnline = function setupOnline() {\n    try {\n      NoService.createActivitySocket('NoUser', function (err, NoUser) {\n        Services.NoUser = NoUser;\n        NoUser.call('returnUserMeta', null, function (err, meta) {\n          _this.Actions.updateUserMeta(meta);\n\n          alert(meta);\n        });\n      });\n    } catch (e) {\n      console.log(e);\n      setTimeout(setupOnline, 15 * 1000);\n    }\n  };\n\n  this.Actions = {\n    updateLang: function updateLang(lang) {\n      Dispatcher.dispatch({\n        type: 'updateLang',\n        data: lang\n      });\n    },\n    updateLocalizes: function updateLocalizes(data) {\n      Dispatcher.dispatch({\n        type: 'updateLocalizes',\n        data: data\n      });\n    },\n    updateUserMeta: function updateUserMeta(data) {\n      Dispatcher.dispatch({\n        type: 'updateUserMeta',\n        data: data\n      });\n    },\n    log: function log(data) {\n      console.log(data);\n    }\n  };\n\n  this.start = function (next) {\n    _this.Actions.updateLang('en');\n\n    _this.Actions.updateLocalizes(Localizes);\n\n    setupOnline();\n  };\n}\n\nexport default Service;","map":{"version":3,"sources":["/Users/yves/Software-Dev/NoService-Account/noservice-account/src/flux/service.js"],"names":["Constants","Localizes","Service","NoService","Dispatcher","Services","NoUser","setupOnline","createActivitySocket","err","call","meta","Actions","updateUserMeta","alert","e","console","log","setTimeout","updateLang","lang","dispatch","type","data","updateLocalizes","start","next"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAEA,SAASC,OAAT,CAAiBC,SAAjB,EAA4BC,UAA5B,EAAwC;AAAA;;AACtC,MAAIC,QAAQ,GAAG;AACbC,IAAAA,MAAM,EAAE;AADK,GAAf;;AAIA,MAAIC,WAAW,GAAG,SAAdA,WAAc,GAAK;AACrB,QAAI;AACFJ,MAAAA,SAAS,CAACK,oBAAV,CAA+B,QAA/B,EAAyC,UAACC,GAAD,EAAMH,MAAN,EAAgB;AACvDD,QAAAA,QAAQ,CAACC,MAAT,GAAkBA,MAAlB;AACAA,QAAAA,MAAM,CAACI,IAAP,CAAY,gBAAZ,EAA8B,IAA9B,EAAoC,UAACD,GAAD,EAAME,IAAN,EAAc;AAChD,UAAA,KAAI,CAACC,OAAL,CAAaC,cAAb,CAA4BF,IAA5B;;AACAG,UAAAA,KAAK,CAACH,IAAD,CAAL;AACD,SAHD;AAID,OAND;AAOD,KARD,CASA,OAAOI,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAG,MAAAA,UAAU,CAACX,WAAD,EAAc,KAAG,IAAjB,CAAV;AACD;AACF,GAdD;;AAgBA,OAAKK,OAAL,GAAe;AACbO,IAAAA,UAAU,EAAE,oBAACC,IAAD,EAAS;AACnBhB,MAAAA,UAAU,CAACiB,QAAX,CAAoB;AAACC,QAAAA,IAAI,EAAE,YAAP;AAAqBC,QAAAA,IAAI,EAAEH;AAA3B,OAApB;AACD,KAHY;AAIbI,IAAAA,eAAe,EAAE,yBAACD,IAAD,EAAS;AACxBnB,MAAAA,UAAU,CAACiB,QAAX,CAAoB;AAACC,QAAAA,IAAI,EAAE,iBAAP;AAA0BC,QAAAA,IAAI,EAAEA;AAAhC,OAApB;AACD,KANY;AAObV,IAAAA,cAAc,EAAE,wBAACU,IAAD,EAAS;AACvBnB,MAAAA,UAAU,CAACiB,QAAX,CAAoB;AAACC,QAAAA,IAAI,EAAE,gBAAP;AAAyBC,QAAAA,IAAI,EAAEA;AAA/B,OAApB;AACD,KATY;AAUbN,IAAAA,GAAG,EAAE,aAACM,IAAD,EAAS;AAACP,MAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AAAkB;AAVpB,GAAf;;AAaA,OAAKE,KAAL,GAAa,UAACC,IAAD,EAAS;AACpB,IAAA,KAAI,CAACd,OAAL,CAAaO,UAAb,CAAwB,IAAxB;;AACA,IAAA,KAAI,CAACP,OAAL,CAAaY,eAAb,CAA6BvB,SAA7B;;AACAM,IAAAA,WAAW;AACZ,GAJD;AAKD;;AAED,eAAeL,OAAf","sourcesContent":["// /src/flux/service.js\n// Description:\n// \"service.js\"\n// Copyright 2018-2020 NOOXY. All Rights Reserved.\nimport Constants from './constants.json';\nimport Localizes from './data/localizes.json';\n\nfunction Service(NoService, Dispatcher) {\n  let Services = {\n    NoUser: null\n  };\n\n  let setupOnline = ()=> {\n    try {\n      NoService.createActivitySocket('NoUser', (err, NoUser)=> {\n        Services.NoUser = NoUser;\n        NoUser.call('returnUserMeta', null, (err, meta)=> {\n          this.Actions.updateUserMeta(meta);\n          alert(meta);\n        });\n      });\n    }\n    catch (e) {\n      console.log(e);\n      setTimeout(setupOnline, 15*1000);\n    }\n  };\n\n  this.Actions = {\n    updateLang: (lang)=> {\n      Dispatcher.dispatch({type: 'updateLang', data: lang});\n    },\n    updateLocalizes: (data)=> {\n      Dispatcher.dispatch({type: 'updateLocalizes', data: data});\n    },\n    updateUserMeta: (data)=> {\n      Dispatcher.dispatch({type: 'updateUserMeta', data: data});\n    },\n    log: (data)=> {console.log(data)}\n  };\n\n  this.start = (next)=> {\n    this.Actions.updateLang('en');\n    this.Actions.updateLocalizes(Localizes);\n    setupOnline();\n  }\n}\n\nexport default Service;\n"]},"metadata":{},"sourceType":"module"}