{"ast":null,"code":"// NoService/clients/javascript/NSc.js\n// Description:\n// \"NSc.js\" is a NoService framework client.\n// Copyright 2018 NOOXY. All Rights Reserved.\n'use strict';\n\nimport _defineProperty from \"/Users/yves/Software-Dev/NoService-Account/noservice-account/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction NSc() {\n  var settings = {\n    verbose: true,\n    debug: true,\n    user: null,\n    secure: true,\n    NSc_files_root: '/',\n    connmethod: 'WebSocketSecure',\n    targetip: '0.0.0.0',\n    targetport: 43581\n  };\n  var Vars = {\n    'version': 'aphla 0.3.0',\n    'NSP_version': 'aphla 0.4.0',\n    'copyright': 'copyright(c)2018-2019 NOOXY inc.'\n  };\n\n  this.setDebug = function (boo) {\n    settings.debug = boo;\n  };\n\n  String.prototype.replaceAll = function (search, replacement) {\n    var target = this;\n    return target.split(search).join(replacement);\n  };\n\n  var Utils = {\n    getQueryVariable: function getQueryVariable(variable) {\n      var query = window.location.search.substring(1);\n      var vars = query.split(\"&\");\n\n      for (var i = 0; i < vars.length; i++) {\n        var pair = vars[i].split(\"=\");\n\n        if (pair[0] === variable) {\n          return pair[1];\n        }\n      }\n\n      return false;\n    },\n    Base64toArrayBuffer: function Base64toArrayBuffer(b64str) {\n      var raw = window.atob(b64str);\n      var rawLength = raw.length;\n      var array = new Uint8Array(new ArrayBuffer(rawLength));\n\n      for (var i = 0; i < rawLength; i++) {\n        array[i] = raw.charCodeAt(i);\n      }\n\n      return array;\n    },\n    convertPemToBinary: function convertPemToBinary(pem) {\n      var lines = pem.split('\\n');\n      var encoded = '';\n\n      for (var i = 0; i < lines.length; i++) {\n        if (lines[i].trim().length > 0 && lines[i].indexOf('-----BEGIN RSA PRIVATE KEY-----') < 0 && lines[i].indexOf('-----BEGIN RSA PUBLIC KEY-----') < 0 && lines[i].indexOf('-----BEGIN PUBLIC KEY-----') < 0 && lines[i].indexOf('-----END PUBLIC KEY-----') < 0 && lines[i].indexOf('-----BEGIN PRIVATE KEY-----') < 0 && lines[i].indexOf('-----END PRIVATE KEY-----') < 0 && lines[i].indexOf('-----END RSA PRIVATE KEY-----') < 0 && lines[i].indexOf('-----END RSA PUBLIC KEY-----') < 0) {\n          encoded += lines[i].trim();\n        }\n      }\n\n      return Utils.Base64toArrayBuffer(encoded);\n    },\n    ArrayBuffertoBase64: function ArrayBuffertoBase64(buffer) {\n      var binary = '';\n      var bytes = new Uint8Array(buffer);\n      var len = bytes.byteLength;\n\n      for (var i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n\n      return window.btoa(binary);\n    },\n    printLOGO: function printLOGO(version, copyright) {\n      console.log('88b 88  dP\\'Yb   dP\\'Yb  Yb  dP Yb  dP  TM');\n      console.log('88Yb88 dP   Yb dP   Yb  YbdP   YbdP  ');\n      console.log('88 Y88 Yb   dP Yb   dP  dPYb    88   ');\n      console.log('88  Y8  YbodP   YbodP  dP  Yb   88   Service Framework. ');\n      console.log('');\n      console.log('');\n      console.log('ver. ' + version + '. ' + copyright);\n      console.log('For more information or update -> www.nooxy.org');\n      console.log('');\n    },\n    setCookie: function setCookie(cname, cvalue, exdays) {\n      console.log(cname, cvalue, exdays);\n      var d = new Date();\n      d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n      var expires = \"expires=\" + d.toUTCString();\n      document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n    },\n    getCookie: function getCookie(cname) {\n      var name = cname + \"=\";\n      var ca = document.cookie.split(';');\n\n      for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n\n        while (c.charAt(0) === ' ') {\n          c = c.substring(1);\n        }\n\n        if (c.indexOf(name) === 0) {\n          return c.substring(name.length, c.length);\n        }\n      }\n\n      return \"\";\n    },\n    eraseCookie: function eraseCookie(name) {\n      Utils.setCookie(name, \"\", -1);\n    },\n    tagLog: function tagLog(tag, logstring) {\n      if (typeof logstring != 'string') {\n        logstring = JSON.stringify(logstring, null, 2);\n      }\n\n      var _space = 10;\n      tag = tag.substring(0, _space);\n\n      for (var i = 0; i < _space - tag.length; i++) {\n        if (i % 2 != 1) {\n          tag = tag + ' ';\n        } else {\n          tag = ' ' + tag;\n        }\n      }\n\n      console.log('[' + tag + '] ' + logstring.replaceAll('\\n', '\\n[' + tag + '] '));\n    },\n    generateUniqueID: function generateUniqueID() {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    },\n    generateGUID: function generateGUID() {\n      var s4 = function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n      };\n\n      return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n    },\n    searchObject: function searchObject(object, value) {\n      for (var prop in object) {\n        if (object.hasOwnProperty(prop)) {\n          if (object[prop] === value) {\n            return prop;\n          }\n        }\n      }\n    }\n  };\n\n  var Connection = function Connection() {\n    var _this3 = this;\n\n    var _default_local_ip_and_port = '';\n    var _servers = {};\n    var _clients = {};\n    var _have_local_server = false;\n    var _virtnet = null;\n    var _blocked_ip = [];\n    var _tcp_ip_chunk_token = '}{\"\"\"}<>';\n    var heartbeat_phrase = '{m:\"HB\"}'; // define an profile of an connection\n\n    function ConnectionProfile(serverID, Rpos, connMethod, hostip, hostport, clientip, conn) {\n      var _serverID = serverID;\n      var _pos = Rpos;\n      var _connMethod = connMethod;\n      var _bundle = {};\n\n      var _GUID = Utils.generateGUID();\n\n      var _hostip = hostip;\n      var _hostport = hostport;\n      var _clientip = clientip;\n      var _conn = conn; // conn is wrapped!\n\n      if (Rpos === 'Server') {\n        _clients[_GUID] = this;\n      }\n\n      this.closeConnetion = function () {\n        // Utils.tagLog('*ERR*', 'closeConnetion not implemented. Of '+this.type);\n        _conn.closeConnetion(_GUID);\n      };\n\n      this.getServerID = function (callback) {\n        callback(false, _serverID);\n      };\n\n      this.getHostIP = function (callback) {\n        callback(false, _hostip);\n      };\n\n      this.getHostPort = function (callback) {\n        callback(false, _hostport);\n      };\n\n      this.getClientIP = function (callback) {\n        callback(false, _clientip);\n      };\n\n      this.getConnMethod = function (callback) {\n        callback(false, _connMethod);\n      };\n\n      this.getRemotePosition = function (callback) {\n        callback(false, _pos);\n      };\n\n      this.setBundle = function (key, value) {\n        _bundle[key] = value;\n      };\n\n      this.getBundle = function (key, callback) {\n        callback(false, _bundle[key]);\n      };\n\n      this.getConn = function (callback) {\n        callback(false, _conn);\n      };\n\n      this.getGUID = function (callback) {\n        callback(false, _GUID);\n      };\n\n      this.returnServerID = function () {\n        return _serverID;\n      };\n\n      this.returnHostIP = function () {\n        return _hostip;\n      };\n\n      this.returnHostPort = function () {\n        return _hostport;\n      };\n\n      this.returnClientIP = function () {\n        return _clientip;\n      };\n\n      this.returnConnMethod = function () {\n        return _connMethod;\n      };\n\n      this.returnRemotePosition = function () {\n        return _pos;\n      };\n\n      this.returnBundle = function (key) {\n        return _bundle[key];\n      };\n\n      this.returnConn = function () {\n        return _conn;\n      };\n\n      this.returnGUID = function () {\n        return _GUID;\n      };\n\n      this.destroy = function () {\n        // delete this;\n        delete _clients[_GUID];\n      }; // this.onConnectionDropout = () => {\n      //   Utils.tagLog('*ERR*', 'onConnectionDropout not implemented');\n      // }\n\n    }\n\n    function WSClient() {\n      var _this = this;\n\n      var _ws = null;\n\n      this.closeConnetion = function () {\n        _ws.close();\n      };\n\n      this.onData = function (connprofile, data) {\n        Utils.tagLog('*ERR*', 'onData not implemented');\n      };\n\n      this.onClose = function () {\n        Utils.tagLog('*ERR*', 'onClose not implemented');\n      };\n\n      this.send = function (connprofile, data) {\n        try {\n          _ws.send(data);\n        } catch (e) {\n          this.onClose(connprofile);\n\n          _ws.close();\n        }\n      };\n\n      this.connect = function (ip, port, callback) {\n        var connprofile = null;\n        _ws = new WebSocket('ws://' + ip + ':' + port);\n        connprofile = new ConnectionProfile(null, 'Server', 'WebSocket', ip, port, 'localhost', _this);\n        setTimeout(function () {\n          if (_ws.readyState != 1) {\n            callback(_ws.readyState);\n          } else {// callback(false);\n          }\n        }, 2000);\n\n        _ws.onopen = function () {\n          callback(false, connprofile); // ws.send('something');\n        };\n\n        _ws.onmessage = function (event) {\n          _this.onData(connprofile, event.data);\n        };\n\n        _ws.onerror = function (error) {\n          Utils.tagLog('*ERR*', error);\n\n          _ws.close();\n\n          _this.onClose(connprofile);\n        };\n\n        _ws.onclose = function () {\n          _this.onClose(connprofile);\n        };\n      };\n    }\n\n    ;\n\n    function WSSClient() {\n      var _this2 = this;\n\n      var _ws = null;\n\n      this.closeConnetion = function () {\n        _ws.close();\n      };\n\n      this.onData = function (connprofile, data) {\n        Utils.tagLog('*ERR*', 'onData not implemented');\n      };\n\n      this.onClose = function () {\n        Utils.tagLog('*ERR*', 'onClose not implemented');\n      };\n\n      this.send = function (connprofile, data) {\n        try {\n          _ws.send(data);\n        } catch (e) {\n          this.onClose(connprofile);\n\n          _ws.close();\n        }\n      };\n\n      this.connect = function (ip, port, callback) {\n        var connprofile = null;\n        _ws = new WebSocket('wss://' + ip + ':' + port);\n        connprofile = new ConnectionProfile(null, 'Server', 'WebSocket', ip, port, 'localhost', _this2);\n\n        _ws.onopen = function () {\n          callback(false, connprofile); // ws.send('something');\n        };\n\n        _ws.onmessage = function (event) {\n          _this2.onData(connprofile, event.data);\n        };\n\n        _ws.onerror = function (error) {\n          Utils.tagLog('*ERR*', error);\n\n          _ws.close();\n\n          _this2.onClose(connprofile);\n        };\n\n        _ws.onclose = function () {\n          _this2.onClose(connprofile);\n        };\n      };\n    }\n\n    ;\n\n    this.createClient = function (conn_method, remoteip, port, callback) {\n      // Heartbeat\n      var onData_wrapped = function onData_wrapped(connprofile, data) {\n        if (data != heartbeat_phrase) {\n          _this3.onData(connprofile, data);\n        }\n      };\n\n      if (conn_method === 'ws' || conn_method == 'WebSocket') {\n        var serverID = \"WebSocket\";\n        var wsc = new WSClient(_virtnet);\n        wsc.onData = onData_wrapped;\n        wsc.onClose = _this3.onClose;\n        wsc.connect(remoteip, port, callback);\n      } else if (conn_method === 'wss' || conn_method == 'WebSocketSecure') {\n        var _serverID2 = \"WebSocketSecure\";\n        var wssc = new WSSClient(_virtnet);\n        wssc.onData = onData_wrapped;\n        wssc.onClose = _this3.onClose;\n        wssc.connect(remoteip, port, callback);\n      } else {\n        Utils.tagLog('*ERR*', '' + conn_method + ' not implemented. Skipped.');\n      }\n    };\n\n    this.send = function (connprofile, data) {\n      connprofile.getConn(function (err, conn) {\n        conn.send(connprofile, data);\n      });\n    };\n\n    this.onData = function (conn_profile, data) {\n      Utils.tagLog('*ERR*', 'Connection module onData not implement');\n    };\n\n    this.onClose = function (connprofile) {\n      Utils.tagLog('*ERR*', 'Connection module onClose not implement');\n    };\n\n    this.getClients = function (callback) {\n      callback(false, _clients);\n    };\n  };\n\n  function AuthorizationHandler() {\n    var _implementation_module = null;\n    var _daemon_auth_key = null;\n    var _trusted_domains = [];\n    var _implts_callback = {\n      // Authby password\n      'PW': function PW(connprofile, data, data_sender) {\n        var AuthbyPassword = _implementation_module.returnImplement('AuthbyPassword');\n\n        AuthbyPassword(connprofile, data, data_sender);\n      },\n      // Authby password failed\n      'PF': function PF(connprofile, data, data_sender) {\n        var AuthbyPasswordFailed = _implementation_module.returnImplement('AuthbyPasswordFailed');\n\n        AuthbyPasswordFailed(connprofile, data, data_sender);\n      },\n      // Authby token\n      'TK': function TK(connprofile, data, data_sender) {\n        var AuthbyToken = _implementation_module.returnImplement('AuthbyToken');\n\n        AuthbyToken(connprofile, data, data_sender);\n      },\n      // Authby token failed\n      'TF': function TF(connprofile, data, data_sender) {\n        var AuthbyTokenFailed = _implementation_module.returnImplement('AuthbyTokenFailed');\n\n        AuthbyTokenFailed(connprofile, data, data_sender);\n      },\n      // Sign in\n      'SI': function SI(connprofile, data, data_sender) {\n        var Signin = _implementation_module.returnImplement('signin');\n\n        Signin(connprofile, data, data_sender);\n      }\n    };\n\n    this.RqRouter = function (connprofile, data, data_sender) {\n      _implts_callback[data.m](connprofile, data, data_sender);\n    };\n\n    this.importImplementationModule = function (implementation_module) {\n      _implementation_module = implementation_module;\n    };\n\n    this.close = function () {};\n  }\n\n  ;\n\n  var Router = function Router() {\n    var _this4 = this;\n\n    var _coregateway = null; // nooxy service protocol sercure\n\n    var _json_sniffers = [];\n    var _raw_sniffers = []; // for signup timeout\n\n    var _locked_ip = [];\n\n    var _debug;\n\n    var _tellJSONSniffers = function _tellJSONSniffers(Json) {\n      if (settings.debug) {\n        Utils.tagLog('DEBUG', Json);\n      }\n\n      ;\n\n      for (var i in _json_sniffers) {\n        _json_sniffers[i](false, Json);\n      }\n    };\n\n    var _tellRAWSniffers = function _tellRAWSniffers(data) {\n      for (var i in _raw_sniffers) {\n        _raw_sniffers[i](false, data);\n      }\n    }; // in case of wrong session of the position\n\n\n    var _sessionnotsupport = function _sessionnotsupport() {\n      console.log('[*ERR*] session not support');\n      var err = new Error();\n      throw err;\n    }; // a convinient function fo sending data\n\n\n    var _senddata = function _senddata(connprofile, method, session, data) {\n      var wrapped = {\n        m: method,\n        s: session,\n        d: data\n      };\n      var json = JSON.stringify(wrapped); // finally sent the data through the connection.\n\n      if (connprofile.returnBundle('NSPS') === true) {\n        _coregateway.NoCrypto.encryptString('AESCBC256', connprofile.returnBundle('aes_256_cbc_key'), json, function (err, encrypted) {\n          _coregateway.Connection.send(connprofile, encrypted);\n        });\n      } else if (connprofile.returnBundle('NSPS') === 'finalize') {\n        connprofile.setBundle('NSPS', true);\n\n        _coregateway.Connection.send(connprofile, json);\n      } else {\n        _coregateway.Connection.send(connprofile, json);\n      }\n    }; // implementations of NOOXY Service Protocol methods\n\n\n    var methods = {\n      // nooxy service protocol implementation of \"sercure protocol\"\n      SP: {\n        emitter: function emitter(connprofile, data) {\n          _senddata(connprofile, 'SP', 'rq', data);\n        },\n        handler: function handler(connprofile, session, data) {\n          var rq_rs_pos = {\n            rq: \"Server\",\n            rs: \"Client\"\n          };\n          var actions = {\n            rq: _coregateway.NSPS.RqRouter,\n            rs: _coregateway.NSPS.RsRouter\n          };\n          connprofile.getRemotePosition(function (err, pos) {\n            if (rq_rs_pos[session] === pos || rq_rs_pos[session] === 'Both') {\n              if (session === 'rq') {\n                actions[session](connprofile, data, _senddata);\n              } else {\n                actions[session](connprofile, data);\n              }\n            } else {\n              _sessionnotsupport();\n            }\n          });\n        }\n      },\n      // nooxy service protocol implementation of \"get token\"\n      GT: {\n        emitter: function emitter(connprofile, data) {\n          _senddata(connprofile, 'GT', 'rq', data);\n        },\n        handler: function handler(connprofile, session, data) {\n          var rq_rs_pos = {\n            rq: \"Client\",\n            rs: \"Server\"\n          };\n          var actions = {\n            rq: function rq(connprofile, data) {\n              var responsedata = {};\n\n              _coregateway.Authenticity.getUserToken(data.u, data.p, function (err, token) {\n                responsedata['t'] = token;\n\n                if (err) {\n                  responsedata['s'] = 'Fail';\n                } else {\n                  responsedata['s'] = 'OK';\n                }\n\n                _senddata(connprofile, 'GT', 'rs', responsedata);\n              });\n            },\n            rs: function rs(connprofile, data) {\n              _coregateway.Implementation.onToken(connprofile, data.s, data.t);\n            }\n          };\n          connprofile.getRemotePosition(function (err, pos) {\n            if (rq_rs_pos[session] === pos || rq_rs_pos[session] === 'Both') {\n              if (session === 'rq') {\n                actions[session](connprofile, data, _senddata);\n              } else {\n                actions[session](connprofile, data);\n              }\n            } else {\n              _sessionnotsupport();\n            }\n          });\n        }\n      },\n      // nooxy service protocol implementation of \"Authorization\"\n      AU: {\n        emitter: function emitter(connprofile, data) {\n          _senddata(connprofile, 'AU', 'rq', data);\n        },\n        handler: function handler(connprofile, session, data) {\n          var rq_rs_pos = {\n            rq: \"Server\",\n            rs: \"Client\"\n          };\n          var actions = {\n            rq: _coregateway.AuthorizationHandler.RqRouter\n          };\n          connprofile.getRemotePosition(function (err, pos) {\n            if (rq_rs_pos[session] === pos || rq_rs_pos[session] === 'Both') {\n              if (session === 'rq') {\n                actions[session](connprofile, data, _senddata);\n              } else {\n                actions[session](connprofile, data);\n              }\n            } else {\n              _sessionnotsupport();\n            }\n          });\n        }\n      },\n      // nooxy service protocol implementation of \"Call Service\"\n      CS: {\n        emitter: function emitter(connprofile, data) {\n          _senddata(connprofile, 'CS', 'rq', data);\n        },\n        handler: function handler(connprofile, session, data) {\n          var rq_rs_pos = {\n            rq: \"Client\",\n            rs: \"Server\"\n          };\n          var actions = {\n            rq: _coregateway.Service.ServiceRqRouter,\n            rs: _coregateway.Service.ServiceRsRouter\n          };\n          connprofile.getRemotePosition(function (err, pos) {\n            if (rq_rs_pos[session] === pos || rq_rs_pos[session] === 'Both') {\n              if (session === 'rq') {\n                actions[session](connprofile, data, _senddata);\n              } else {\n                actions[session](connprofile, data);\n              }\n            } else {\n              _sessionnotsupport();\n            }\n          });\n        }\n      },\n      // nooxy service protocol implementation of \"Call Activity\"\n      CA: {\n        emitter: function emitter(connprofile, data) {\n          _senddata(connprofile, 'CA', 'rq', data);\n        },\n        handler: function handler(connprofile, session, data) {\n          var rq_rs_pos = {\n            rq: \"Both\",\n            rs: \"Both\"\n          };\n          var actions = {\n            rq: _coregateway.Service.ActivityRqRouter,\n            rs: _coregateway.Service.ActivityRsRouter\n          };\n          connprofile.getRemotePosition(function (err, pos) {\n            if (rq_rs_pos[session] === pos || rq_rs_pos[session] === 'Both') {\n              if (session === 'rq') {\n                actions[session](connprofile, data, _senddata);\n              } else {\n                actions[session](connprofile, data);\n              }\n            } else {\n              _sessionnotsupport();\n            }\n          });\n        }\n      }\n    };\n\n    this.addJSONSniffer = function (callback) {\n      _json_sniffers.push(callback);\n    };\n\n    this.addRAWSniffer = function (callback) {\n      _raw_sniffers.push(callback);\n    }; // emit specified method.\n\n\n    this.emit = function (connprofile, method, data) {\n      methods[method].emitter(connprofile, data);\n    }; // import the accessbility of core resource\n\n\n    this.importCore = function (coregateway) {\n      _coregateway = coregateway;\n      _debug = _coregateway.Settings.debug; // while recieve a data from connection\n\n      _coregateway.Connection.onData = function (connprofile, data) {\n        _tellRAWSniffers(data);\n\n        try {\n          if (_coregateway.Settings.secure === true && connprofile.returnConnMethod() != 'Local' && connprofile.returnConnMethod() != 'local') {\n            // upgrade protocol\n            if (connprofile.returnBundle('NSPS') === 'pending') {\n              var json = JSON.parse(data);\n\n              _tellJSONSniffers(json);\n\n              methods[json.m].handler(connprofile, json.s, json.d);\n            } else if (connprofile.returnBundle('NSPS') != true && connprofile.returnRemotePosition() === 'Client') {\n              _coregateway.NSPS.upgradeConnection(connprofile, function (err, succeess) {\n                if (succeess) {\n                  var _json = JSON.parse(data);\n\n                  _tellJSONSniffers(_json);\n\n                  methods[_json.m].handler(connprofile, _json.s, _json.d);\n                } else {\n                  connprofile.closeConnetion();\n                }\n              });\n            } else if (connprofile.returnBundle('NSPS') != true) {\n              var _json2 = JSON.parse(data);\n\n              _tellJSONSniffers(_json2);\n\n              methods[_json2.m].handler(connprofile, _json2.s, _json2.d);\n            } else if (connprofile.returnBundle('NSPS') === true) {\n              // true\n              _coregateway.NoCrypto.decryptString('AESCBC256', connprofile.returnBundle('aes_256_cbc_key'), data, function (err, decrypted) {\n                if (err && _coregateway.Settings.debug) {\n                  console.log(err);\n                }\n\n                var json = JSON.parse(decrypted);\n\n                _tellJSONSniffers(json);\n\n                methods[json.m].handler(connprofile, json.s, json.d);\n              });\n            }\n          } else {\n            var _json3 = JSON.parse(data);\n\n            _tellJSONSniffers(_json3);\n\n            methods[_json3.m].handler(connprofile, _json3.s, _json3.d);\n          }\n        } catch (er) {\n          if (_debug) {\n            Utils.tagLog('*ERR*', 'An error occured in router module.');\n            console.log(er);\n          }\n        }\n      };\n\n      _coregateway.Connection.onClose = function (connprofile) {\n        try {\n          _coregateway.Service.onConnectionClose(connprofile, function (err) {\n            connprofile.destroy();\n          });\n        } catch (er) {\n          if (_debug) {\n            Utils.tagLog('*WARN*', 'An error occured in router module.');\n            console.log(er);\n          }\n        }\n      };\n\n      _coregateway.Service.setEmitRouter(_this4.emit);\n\n      _coregateway.Implementation.emitRouter = _this4.emit;\n      _coregateway.Implementation.sendRouterData = _senddata;\n      _coregateway.NSPS.emitRouter = _this4.emit;\n      _coregateway.Service.spwanClient = _coregateway.Connection.createClient;\n    };\n  };\n\n  var Service = function Service() {\n    var _this6 = this;\n\n    // need add service event system\n    var _activities = {};\n    var _local_services_owner = null;\n    var _ActivityRsCEcallbacks = {};\n    var _ASockets = {};\n    var _debug = false;\n\n    var _local_services;\n\n    var _entity_module;\n\n    var _emitRouter;\n\n    var ActivitySocketDestroyTimeout = 1000;\n\n    var _unbindActivitySocketList = function _unbindActivitySocketList(_entity_id) {\n      setTimeout(function () {\n        // tell worker abort referance\n        if (_ASockets[_entity_id]) _ASockets[_entity_id].worker_cancel_refer = true;\n        delete _ASockets[_entity_id];\n      }, ActivitySocketDestroyTimeout);\n    };\n\n    this.setDebug = function (boolean) {\n      _debug = boolean;\n    };\n\n    this.importOwner = function (owner) {\n      _local_services_owner = owner;\n    };\n\n    this.spwanClient = function () {\n      Utils.tagLog('*ERR*', 'spwanClient not implemented');\n    };\n\n    this.setEmitRouter = function (emitRouter) {\n      _emitRouter = emitRouter;\n    };\n\n    this.onConnectionClose = function (connprofile, callback) {\n      var _entitiesID = connprofile.returnBundle('bundle_entities');\n\n      if (_entitiesID === null) {\n        callback(true);\n      } else if (_entitiesID.length) {\n        var Rpos = connprofile.returnRemotePosition();\n\n        if (connprofile.returnRemotePosition() === 'Client') {\n          var i = 0;\n\n          var loop = function loop() {\n            var theservice = _local_services[_entity_module.returnEntityValue(_entitiesID[i], 'service')];\n\n            _entity_module.deleteEntity(_entitiesID[i]);\n\n            theservice.sendSSClose(_entitiesID[i], function (err) {});\n\n            if (i < _entitiesID.length - 1) {\n              i++;\n              loop();\n            }\n          };\n\n          loop();\n          callback(false);\n        } else {\n          for (var _i in _entitiesID) {\n            _ASockets[_entitiesID[_i]].onClose();\n          }\n\n          callback(false);\n        }\n      } else {\n        callback(false);\n      }\n    }; // ClientSide\n\n\n    this.ServiceRsRouter = function (connprofile, data) {\n      var methods = {\n        // nooxy service protocol implementation of \"Call Service: Vertify Connection\"\n        VE: function VE(connprofile, data) {\n          if (data.d.s === 'OK') {\n            _ASockets[data.d.i].launch();\n          } else {\n            _ASockets[data.d.i]._emitClose();\n          }\n        },\n        // nooxy service protocol implementation of \"Call Service: ServiceSocket\"\n        SS: function SS(connprofile, data) {},\n        // nooxy service protocol implementation of \"Call Service: JSONfunction\"\n        JF: function JF(connprofile, data) {\n          if (data.d.s === 'OK') {\n            _ASockets[data.d.i].sendJFReturn(false, data.d.t, data.d.r);\n          } else {\n            _ASockets[data.d.i].sendJFReturn(true, data.d.t, data.d.r);\n          }\n        },\n        // nooxy service protocol implementation of \"Call Activity: createEntity\"\n        CE: function CE(connprofile, data) {\n          // tell server finish create\n          if (data.d.i != null) {\n            // create a description of this service entity.\n            _ActivityRsCEcallbacks[data.d.t](connprofile, data);\n\n            var _data = {\n              \"m\": \"VE\",\n              \"d\": {\n                \"i\": data.d.i\n              }\n            };\n\n            _emitRouter(connprofile, 'CS', _data);\n          } else {\n            delete _ActivityRsCEcallbacks[data.d.t];\n            connprofile.closeConnetion();\n          }\n        } // call the callback.\n\n      };\n      methods[data.m](connprofile, data);\n    }; // Serverside implement\n\n\n    this.ActivityRqRouter = function (connprofile, data, response_emit) {\n      var methods = {\n        // nooxy service protocol implementation of \"Call Activity: ActivitySocket\"\n        AS: function AS() {\n          _ASockets[data.d.i]._emitData(data.d.d);\n\n          var _data = {\n            \"m\": \"AS\",\n            \"d\": {\n              // status\n              \"i\": data.d.i,\n              \"s\": \"OK\"\n            }\n          };\n          response_emit(connprofile, 'CA', 'rs', _data);\n        },\n        // nooxy service protocol implementation of \"Call Activity: Event\"\n        EV: function EV() {\n          _ASockets[data.d.i]._emitEvent(data.d.n, data.d.d);\n\n          var _data = {\n            \"m\": \"EV\",\n            \"d\": {\n              // status\n              \"i\": data.d.i,\n              \"s\": \"OK\"\n            }\n          };\n          response_emit(connprofile, 'CA', 'rs', _data);\n        },\n        // nooxy service protocol implementation of \"Call Activity: Close ActivitySocket\"\n        CS: function CS() {\n          _ASockets[data.d.i].remoteClosed = true;\n\n          _ASockets[data.d.i].close();\n        } // call the callback.\n\n      };\n      methods[data.m](connprofile, data.d, response_emit);\n    };\n\n    function ActivitySocket(conn_profile, emitRouter, unbindActivitySocketList, debug) {\n      var _this5 = this;\n\n      // Service Socket callback\n      var _emitdata = function _emitdata(i, d) {\n        var _data = {\n          \"m\": \"SS\",\n          \"d\": {\n            \"i\": i,\n            \"d\": d\n          }\n        };\n        emitRouter(conn_profile, 'CS', _data);\n      }; // Service Socket callback\n\n\n      var _emitclose = function _emitclose(i) {\n        var _data = {\n          \"m\": \"CS\",\n          \"d\": {\n            \"i\": i\n          }\n        };\n        emitRouter(conn_profile, 'CS', _data);\n      };\n\n      var _emitjfunc = function _emitjfunc(entity_id, name, tempid, Json) {\n        var _data = {\n          \"m\": \"JF\",\n          \"d\": {\n            \"i\": entity_id,\n            \"n\": name,\n            \"j\": JSON.stringify(Json),\n            \"t\": tempid\n          }\n        };\n        emitRouter(conn_profile, 'CS', _data);\n      };\n\n      var _entity_id = null;\n      var _launched = false;\n      var wait_ops = [];\n      var wait_launch_ops = [];\n      var _jfqueue = {};\n      var _on_dict = {\n        data: function data() {\n          if (_this5.onData) {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            _this5.onData.apply(null, args);\n          } else if (debug) Utils.TagLog('*WARN*', 'ActivitySocket on \"data\" not implemented');\n        },\n        close: function close() {\n          if (_this5.onClose) {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            _this5.onClose.apply(null, args);\n          } else if (debug) Utils.TagLog('*WARN*', 'ActivitySocket on \"close\" not implemented');\n        }\n      };\n      var _on_event = {}; // For waiting connection is absolutly established. We need to wrap operations and make it queued.\n\n      var exec = function exec(callback) {\n        if (_launched != false) {\n          callback();\n        } else {\n          wait_ops.push(callback);\n        }\n      };\n\n      this.launch = function () {\n        _launched = true;\n\n        for (var i in wait_ops) {\n          wait_ops[i]();\n        }\n      };\n\n      this.setEntityID = function (id) {\n        _entity_id = id;\n        var entities_prev = conn_profile.returnBundle('bundle_entities');\n\n        if (entities_prev != null) {\n          conn_profile.setBundle('bundle_entities', [_entity_id].concat(entities_prev));\n        } else {\n          conn_profile.setBundle('bundle_entities', [_entity_id]);\n        }\n      };\n\n      this.sendJFReturn = function (err, tempid, returnvalue) {\n        if (err) {\n          _jfqueue[tempid](err);\n        } else {\n          _jfqueue[tempid](err, JSON.parse(returnvalue));\n        }\n      }; // JSONfunction call\n\n\n      this.call = function (name, Json, callback) {\n        var op = function op() {\n          var tempid = Utils.generateUniqueID();\n\n          _jfqueue[tempid] = function (err, returnvalue) {\n            callback(err, returnvalue);\n          };\n\n          _emitjfunc(_entity_id, name, tempid, Json);\n        };\n\n        exec(op);\n      };\n\n      this.getEntityID = function (callback) {\n        callback(false, _entity_id);\n      };\n\n      this.sendData = function (data) {\n        var op = function op() {\n          _emitdata(_entity_id, data);\n        };\n\n        exec(op);\n      };\n\n      this.on = function (type, callback) {\n        _on_dict[type] = callback;\n      };\n\n      this.onEvent = function (event, callback) {\n        _on_event[event] = callback;\n      };\n\n      this._emitData = function (data) {\n        _on_dict['data'](false, data);\n      };\n\n      this._emitEvent = function (event, data) {\n        if (_on_event[event]) _on_event[event](false, data);\n      };\n\n      this._emitClose = function () {\n        _on_dict['close'](false);\n      };\n\n      this.remoteClosed = false;\n\n      this.unbindActivitySocketList = function () {\n        Utils.TagLog('*ERR*', '_aftercloseLaunched not implemented');\n      };\n\n      this.close = function () {\n        var op = function op() {\n          if (!_this5.remoteClosed) _emitclose(_entity_id);\n\n          _this5._emitClose();\n\n          var bundle = conn_profile.returnBundle('bundle_entities');\n\n          for (var i = bundle.length - 1; i >= 0; i--) {\n            if (bundle[i] === _entity_id) {\n              unbindActivitySocketList(_entity_id);\n              bundle.splice(i, 1);\n            }\n          }\n\n          conn_profile.setBundle('bundle_entities', bundle);\n\n          if (bundle.length === 0) {\n            conn_profile.closeConnetion();\n          }\n        };\n\n        exec(op);\n      };\n    }\n\n    ; // Service module launch\n\n    this.launch = function () {}; // Service module Owner\n\n\n    this.setupOwner = function (username) {\n      _local_services_owner = username;\n    }; // Service module create activity socket\n\n\n    this.createActivitySocket = function (method, targetip, targetport, service, callback) {\n      var err = false;\n      var _data = {\n        \"m\": \"CE\",\n        \"d\": {\n          t: Utils.generateGUID(),\n          o: _local_services_owner,\n          m: 'normal',\n          s: service,\n          od: targetip\n        }\n      };\n\n      _this6.spwanClient(method, targetip, targetport, function (err, connprofile) {\n        if (err) {\n          callback(err);\n        } else {\n          var _as = new ActivitySocket(connprofile, _emitRouter, _unbindActivitySocketList, _debug);\n\n          _ActivityRsCEcallbacks[_data.d.t] = function (connprofile, data) {\n            if (data.d.i != \"FAIL\") {\n              _as.setEntityID(data.d.i);\n\n              connprofile.setBundle('entityID', data.d.i);\n              _ASockets[data.d.i] = _as;\n              callback(false, _ASockets[data.d.i]);\n            } else {\n              callback(true, _ASockets[data.d.i]);\n            }\n          };\n\n          _emitRouter(connprofile, 'CS', _data);\n        }\n      });\n    };\n  };\n\n  var Implementation = function Implementation() {\n    var _implts2;\n\n    var _support_secure = false;\n    var _connection_module = null; // NOOXY service protocol secure list\n\n    var _nsps_list = ['generateAESCBC256KeyByHash', 'encryptString', 'decryptString'];\n\n    var _implts = (_implts2 = {\n      // NOOXY service protocol sercure\n      // hashing two string (host and client pub key)by SHA256 to get AES-CBC 256 key 32 char\n      generateAESCBC256KeyByHash: function generateAESCBC256KeyByHash(string1, string2, callback) {\n        Utils.tagLog('*ERR*', 'generateAESCBC256KeyByHash not implemented');\n        callback(true, 'hash 32 char');\n      },\n      encryptString: function encryptString(key, toEncrypt, callback) {\n        Utils.tagLog('*ERR*', 'generateAESCBC256KeyByHash not implemented');\n        callback(true, 'encrypted');\n      },\n      decryptString: function decryptString(key, toEncrypt, callback) {\n        Utils.tagLog('*ERR*', 'generateAESCBC256KeyByHash not implemented');\n        callback(true, 'decrypted');\n      },\n      saveRSA2048KeyPair: function saveRSA2048KeyPair(priv, pub) {\n        Utils.tagLog('*ERR*', 'saveRSA2048KeyPair not implemented');\n      },\n      loadRSA2048KeyPair: function loadRSA2048KeyPair(callback) {\n        Utils.tagLog('*ERR*', 'loadRSA2048KeyPair not implemented');\n        callback(true, 'priv', 'pub');\n      },\n      // NOOXY service protocol sercure end\n      // return for Server\n      AuthbyToken: function AuthbyToken(callback) {\n        Utils.tagLog('*ERR*', 'AuthbyToken not implemented');\n        callback(true, 'token');\n      },\n      AuthbyTokenFailed: function AuthbyTokenFailed() {\n        Utils.tagLog('*ERR*', 'AuthbyTokenFailed not implemented');\n      },\n      // return for Server\n      AuthbyPassword: function AuthbyPassword(callback) {\n        Utils.tagLog('*ERR*', 'AuthbyPassword not implemented');\n        callback(true, 'password');\n      },\n      AuthbyPasswordFailed: function AuthbyPasswordFailed() {\n        Utils.tagLog('*ERR*', 'AuthbyPasswordFailed not implemented');\n      },\n      // return for Client\n      signin: function signin(conn_method, remoteip, port, username, password, callback) {\n        Utils.tagLog('*ERR*', 'signin not implemented');\n        callback(true, 'token');\n      },\n      // return for Client\n      signup: function signup(conn_method, remoteip, port, username, password, callback) {\n        Utils.tagLog('*ERR*', 'signup not implemented');\n        callback(true, 'token');\n      },\n      onToken: function onToken(err, token) {\n        Utils.tagLog('*ERR*', 'onToken not implemented');\n      },\n      // for Server\n      noti: function noti() {}\n    }, _defineProperty(_implts2, \"AuthbyPassword\", null), _defineProperty(_implts2, \"AuthbyAction\", null), _implts2); // Nooxy service protocol sercure request\n\n\n    this.NSPSRqRouter = function (connprofile, data, data_sender) {};\n\n    this.onToken = function (connprofile, status, token) {\n      if (status === 'OK') {\n        _implts['onToken'](false, token);\n      } else {\n        _implts['onToken'](true);\n      }\n    };\n\n    this.emitRouter = function () {\n      Utils.tagLog('*ERR*', 'emitRouter not implemented');\n    };\n\n    this.sendRouterData = function () {\n      Utils.tagLog('*ERR*', 'sendRouterData not implemented');\n    }; // get a temporary ConnectionProfile\n\n\n    this.getClientConnProfile = function (conn_method, remoteip, port, callback) {\n      _connection_module.createClient(conn_method, remoteip, port, callback);\n    };\n\n    this.getDefaultClientConnProfile = function (callback) {\n      _connection_module.createClient(settings.connmethod, settings.targetip, settings.targetport, callback);\n    };\n\n    this.importConnectionModule = function (connection_module) {\n      _connection_module = connection_module;\n    };\n\n    this.setSecure = function (boolean) {};\n\n    this.isSecure = function (boolean) {};\n\n    this.setImplement = function (name, callback) {\n      _implts[name] = callback;\n    };\n\n    this.returnImplement = function (name) {\n      return _implts[name];\n    };\n\n    this.returnImplementBundle = function () {\n      return _implts;\n    };\n\n    this.returnNSPSModule = function () {};\n\n    this.close = function () {};\n  };\n\n  var NSPS = function NSPS() {\n    var _this7 = this;\n\n    var _rsa_pub = null;\n    var _rsa_priv = null;\n    var _resumes = {};\n    var _crypto_module = null;\n\n    this.emitRouter = function () {\n      console.log('[*ERR*] emit not implemented');\n    }; // Nooxy service protocol sercure request ClientSide\n    // in client need to be in implementation module\n\n\n    this.RqRouter = function (connprofile, data, data_sender) {\n      var host_rsa_pub = data.p;\n\n      var client_random_num = _crypto_module.returnRandomInt(99999);\n\n      connprofile.setBundle('host_rsa_pub_key', host_rsa_pub);\n\n      _crypto_module.generateAESCBC256KeyByHash(host_rsa_pub, client_random_num, function (err, aes_key) {\n        connprofile.setBundle('aes_256_cbc_key', aes_key);\n        var _data = {\n          r: client_random_num,\n          a: aes_key // aes key to vertify\n\n        };\n\n        _crypto_module.encryptString('RSA2048', host_rsa_pub, JSON.stringify(_data), function (err, encrypted) {\n          connprofile.setBundle('NSPS', 'finalize');\n          data_sender(connprofile, 'SP', 'rs', encrypted);\n        });\n      });\n    };\n\n    this.upgradeConnection = function (connprofile, callback) {\n      _resumes[connprofile.returnGUID()] = callback;\n      var _data = {\n        p: _rsa_pub // RSA publicKey\n\n      };\n      connprofile.setBundle('NSPS', 'pending');\n\n      _this7.emitRouter(connprofile, 'SP', _data);\n    };\n\n    this.importCryptoModule = function (crypto_module) {\n      _crypto_module = crypto_module;\n    };\n\n    this.importRSA2048KeyPair = function (rsa_priv, rsa_pub) {\n      _rsa_priv = rsa_priv;\n      _rsa_pub = rsa_pub;\n    };\n  };\n\n  var Core = function Core() {\n    var verbose = function verbose(tag, log) {\n      if (settings.verbose || settings.debug) {\n        Utils.tagLog(tag, log);\n      }\n\n      ;\n    }; // setup variables\n\n\n    verbose('Daemon', 'Setting up variables.');\n\n    var _connection = new Connection();\n\n    var _authorizationhandler = new AuthorizationHandler();\n\n    var _router = new Router();\n\n    var _service = new Service();\n\n    var _implementation = new Implementation();\n\n    var _nsps;\n\n    var _nocrypto = {\n      returnRandomInt: function returnRandomInt(max) {\n        var f = _implementation.returnImplement('returnRandomInt');\n\n        return f(max);\n      },\n      generateAESCBC256KeyByHash: function generateAESCBC256KeyByHash(string1, string2, callback) {\n        var f = _implementation.returnImplement('generateAESCBC256KeyByHash');\n\n        f(string1, string2, callback);\n      },\n      encryptString: function encryptString(algo, key, toEncrypt, callback) {\n        var f = _implementation.returnImplement('encryptString');\n\n        f(algo, key, toEncrypt, callback);\n      },\n      decryptString: function decryptString(algo, key, toDecrypt, callback) {\n        var f = _implementation.returnImplement('decryptString');\n\n        f(algo, key, toDecrypt, callback);\n      }\n    };\n    _nsps = new NSPS();\n\n    this.launch = function () {\n      Utils.printLOGO(Vars.version, Vars.copyright);\n      var _cry_algo = {\n        // key is in length 32 char\n        AESCBC256: {\n          encryptString: function encryptString(keystr, toEncrypt, callback) {\n            window.crypto.subtle.importKey(\"raw\", //can be \"jwk\" or \"raw\"\n            new TextEncoder('utf-8').encode(keystr), {\n              //this is the algorithm options\n              name: \"AES-CBC\"\n            }, false, //whether the key is extractable (i.e. can be used in exportKey)\n            [\"encrypt\", \"decrypt\"] //can be \"encrypt\", \"decrypt\", \"wrapKey\", or \"unwrapKey\"\n            ).then(function (key) {\n              var iv = new Uint8Array(16);\n              window.crypto.getRandomValues(iv);\n              toEncrypt = new TextEncoder('utf-8').encode(toEncrypt);\n              window.crypto.subtle.encrypt({\n                name: \"AES-CBC\",\n                iv: iv //The initialization vector you used to encrypt\n\n              }, key, //from generateKey or importKey above\n              toEncrypt //ArrayBuffer of the data\n              ).then(function (encrypted) {\n                ;\n                callback(false, Utils.ArrayBuffertoBase64(iv) + Utils.ArrayBuffertoBase64(encrypted));\n              }).catch(function (err2) {\n                console.error(err2);\n              });\n            }).catch(function (err) {\n              console.error(err);\n            });\n          },\n          decryptString: function decryptString(keystr, toDecrypt, callback) {\n            window.crypto.subtle.importKey(\"raw\", //can be \"jwk\" or \"raw\"\n            new TextEncoder('utf-8').encode(keystr), {\n              //this is the algorithm options\n              name: \"AES-CBC\"\n            }, false, //whether the key is extractable (i.e. can be used in exportKey)\n            [\"encrypt\", \"decrypt\"] //can be \"encrypt\", \"decrypt\", \"wrapKey\", or \"unwrapKey\"\n            ).then(function (key) {\n              var iv = Utils.Base64toArrayBuffer(toDecrypt.substring(0, 24));\n              toDecrypt = Utils.Base64toArrayBuffer(toDecrypt.substring(24));\n              window.crypto.subtle.decrypt({\n                name: \"AES-CBC\",\n                iv: iv //The initialization vector you used to encrypt\n\n              }, key, //from generateKey or importKey above\n              toDecrypt //ArrayBuffer of the data\n              ).then(function (decrypted) {\n                ;\n                callback(false, new TextDecoder('utf-8').decode(decrypted));\n              }).catch(function (err2) {\n                console.error(err2);\n              });\n            }).catch(function (err) {\n              console.error(err);\n            });\n          }\n        },\n        // Keys is in pem format\n        RSA2048: {\n          encryptString: function encryptString(publicKey, toEncrypt, callback) {\n            window.crypto.subtle.importKey(\"spki\", //can be \"jwk\" (public or private), \"spki\" (public only), or \"pkcs8\" (private only)\n            Utils.convertPemToBinary(publicKey), {\n              //these are the algorithm options\n              name: \"RSA-OAEP\",\n              hash: {\n                name: \"SHA-1\"\n              } //can be \"SHA-1\", \"SHA-256\", \"SHA-384\", or \"SHA-512\"\n\n            }, false, //whether the key is extractable (i.e. can be used in exportKey)\n            [\"encrypt\"] //\"encrypt\" or \"wrapKey\" for public key import or\n            //\"decrypt\" or \"unwrapKey\" for private key imports\n            ).then(function (key) {\n              //returns a publicKey (or privateKey if you are importing a private key)\n              window.crypto.subtle.encrypt({\n                \"name\": \"RSA-OAEP\"\n              }, key, new TextEncoder('utf-8').encode(toEncrypt)).then(function (encrypted) {\n                callback(false, Utils.ArrayBuffertoBase64(encrypted));\n              });\n            }).catch(function (err) {\n              console.log(err);\n            });\n          }\n        }\n      };\n\n      _implementation.setImplement('returnRandomInt', function (max) {\n        return Math.floor(Math.random() * Math.floor(max));\n      });\n\n      _implementation.setImplement('generateAESCBC256KeyByHash', function (string1, string2, callback) {\n        window.crypto.subtle.digest(\"SHA-256\", new TextEncoder('utf-8').encode(string1 + string2)).then(function (hash) {\n          callback(false, Utils.ArrayBuffertoBase64(hash).substring(0, 32));\n        });\n      });\n\n      _implementation.setImplement('encryptString', function (algo, key, toEncrypt, callback) {\n        _cry_algo[algo].encryptString(key, toEncrypt, callback);\n      });\n\n      _implementation.setImplement('decryptString', function (algo, key, toDecrypt, callback) {\n        _cry_algo[algo].decryptString(key, toDecrypt, callback);\n      }); // setup NoService Auth implementation\n\n\n      _implementation.setImplement('signin', function (connprofile, data, data_sender) {// top.location.replace(settings.NSc_files_root+'login.html?conn_method='+settings.connmethod+'&remote_ip='+settings.targetip+'&port='+settings.targetport+'&redirect='+top.window.location.href);\n        // window.open('.html.html?conn_method='+conn_method+'&remote_ip='+remote_ip+'&port='+port);\n      });\n\n      _implementation.setImplement('onToken', function (err, token) {\n        Utils.setCookie('NSToken', token, 7);\n\n        if (Utils.getQueryVariable('redirect')) {\n          window.location.replace(Utils.getQueryVariable('redirect'));\n        }\n      });\n\n      _implementation.setImplement('setUser', function (err, username) {\n        Utils.setCookie('NSUser', username, 365);\n\n        if (!username) {\n          Utils.eraseCookie('NSUser');\n        }\n      });\n\n      _implementation.setImplement('logout', function (err, Username) {\n        Utils.eraseCookie('NSUser');\n        Utils.eraseCookie('NSToken');\n        window.location.reload();\n      });\n\n      _implementation.setImplement('AuthbyTokenFailed', function (connprofile, data, data_sender) {\n        _implementation.returnImplement('signin')(connprofile, data, data_sender, 'token');\n      }); // setup NoService Auth implementation\n\n\n      _implementation.setImplement('AuthbyToken', function (connprofile, data, data_sender) {\n        var callback = function callback(err, token) {\n          var _data = {\n            m: 'TK',\n            d: {\n              t: data.d.t,\n              v: token\n            }\n          };\n          data_sender(connprofile, 'AU', 'rs', _data);\n        };\n\n        var pass = true;\n\n        if (Utils.getCookie('NSToken') === null) {\n          _implementation.returnImplement('signin')(connprofile, data, data_sender, 'token');\n        } else {\n          callback(false, Utils.getCookie('NSToken'));\n        }\n      }); // setup NoService Auth implementation\n\n\n      _implementation.setImplement('AuthbyPassword', function (connprofile, data, data_sender) {\n        window.open(settings.NSc_files_root + 'password.html?conn_method=' + settings.connmethod + '&remote_ip=' + settings.targetip + '&port=' + settings.targetport + '&username=' + settings.user + '&authtoken=' + data.d.t + '&redirect=' + window.location.href);\n      }); // create gateway\n\n\n      verbose('Daemon', 'Creating coregateway...');\n      var coregateway = {\n        Settings: settings,\n        AuthorizationHandler: _authorizationhandler,\n        Service: _service,\n        Connection: _connection,\n        Router: _router,\n        Implementation: _implementation,\n        NoCrypto: _nocrypto,\n        NSPS: _nsps\n      };\n      verbose('Daemon', 'Creating coregateway done.');\n\n      for (var i in settings.connection_servers) {\n        settings.trusted_domains.push(settings.connection_servers[i].ip);\n      } // setup NOOXY Service protocol secure\n\n\n      _nsps.importCryptoModule(_nocrypto); // setup router\n\n\n      _router.importCore(coregateway); // setup connection\n\n\n      for (var server in settings.connection_servers) {\n        _connection.addServer(settings.connection_servers[server].type, settings.connection_servers[server].ip, settings.connection_servers[server].port);\n      } // setup implementation\n\n\n      _implementation.importConnectionModule(_connection); // setup AuthorizationHandler\n\n\n      _authorizationhandler.importImplementationModule(_implementation); // setup service\n\n\n      _service.setDebug(settings.debug);\n\n      _service.importOwner(settings.user);\n\n      verbose('Daemon', 'Setting up variables done.'); // launch services\n\n      verbose('Daemon', 'Launching service module...');\n\n      _service.launch();\n\n      verbose('Daemon', 'Launching service module done.'); //\n\n      verbose('Daemon', 'NOOXY Service Framework successfully started.');\n    };\n\n    this.getImplement = function (callback) {\n      callback(false, _implementation);\n    };\n\n    this.createActivitySocket = function (method, targetip, targetport, service, callback) {\n      _service.createActivitySocket(method, targetip, targetport, service, callback);\n    };\n  };\n\n  var _core = new Core();\n\n  this.createActivitySocket = function (service, callback) {\n    _core.createActivitySocket(settings.connmethod, settings.targetip, settings.targetport, service, callback);\n  };\n\n  this.getImplement = function (callback) {\n    _core.getImplement(callback);\n  };\n\n  this.returnUserName = function () {\n    return settings.user;\n  };\n\n  this.logout = function () {\n    _core.getImplement(function (err, implement_module) {\n      implement_module.returnImplement('logout')();\n    });\n  };\n\n  this.connect = function (targetip, method, targetport) {\n    if (targetip) {\n      settings.targetip = targetip;\n    }\n\n    if (settings.debug) {\n      settings.connmethod = 'WebSocket';\n      settings.targetport = 43582;\n    }\n\n    if (method) {\n      settings.connmethod = method;\n    }\n\n    if (method == 'WebSocketSecure') {\n      settings.targetport = 43581;\n    } else if (method == 'WebSocket') {\n      settings.targetport = 43582;\n    }\n\n    if (targetport) {\n      settings.targetport = targetport;\n    }\n\n    settings.user = Utils.getCookie('NSUser');\n\n    if (settings.user == \"\") {\n      settings.user = null;\n    }\n\n    ;\n\n    try {\n      _core.launch();\n    } catch (e) {\n      settings.connmethod = 'WebSocket';\n\n      _core.launch();\n    }\n  };\n} // module.exports = NSc;\n\n\nexport default NSc;","map":{"version":3,"sources":["/Users/yves/Software-Dev/NoService-Account/noservice-account/src/components/NoService/NSc.js"],"names":["NSc","settings","verbose","debug","user","secure","NSc_files_root","connmethod","targetip","targetport","Vars","setDebug","boo","String","prototype","replaceAll","search","replacement","target","split","join","Utils","getQueryVariable","variable","query","window","location","substring","vars","i","length","pair","Base64toArrayBuffer","b64str","raw","atob","rawLength","array","Uint8Array","ArrayBuffer","charCodeAt","convertPemToBinary","pem","lines","encoded","trim","indexOf","ArrayBuffertoBase64","buffer","binary","bytes","len","byteLength","fromCharCode","btoa","printLOGO","version","copyright","console","log","setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","getCookie","name","ca","c","charAt","eraseCookie","tagLog","tag","logstring","JSON","stringify","_space","generateUniqueID","Math","random","toString","substr","generateGUID","s4","floor","searchObject","object","value","prop","hasOwnProperty","Connection","_default_local_ip_and_port","_servers","_clients","_have_local_server","_virtnet","_blocked_ip","_tcp_ip_chunk_token","heartbeat_phrase","ConnectionProfile","serverID","Rpos","connMethod","hostip","hostport","clientip","conn","_serverID","_pos","_connMethod","_bundle","_GUID","_hostip","_hostport","_clientip","_conn","closeConnetion","getServerID","callback","getHostIP","getHostPort","getClientIP","getConnMethod","getRemotePosition","setBundle","key","getBundle","getConn","getGUID","returnServerID","returnHostIP","returnHostPort","returnClientIP","returnConnMethod","returnRemotePosition","returnBundle","returnConn","returnGUID","destroy","WSClient","_ws","close","onData","connprofile","data","onClose","send","e","connect","ip","port","WebSocket","setTimeout","readyState","onopen","onmessage","event","onerror","error","onclose","WSSClient","createClient","conn_method","remoteip","onData_wrapped","wsc","wssc","err","conn_profile","getClients","AuthorizationHandler","_implementation_module","_daemon_auth_key","_trusted_domains","_implts_callback","data_sender","AuthbyPassword","returnImplement","AuthbyPasswordFailed","AuthbyToken","AuthbyTokenFailed","Signin","RqRouter","m","importImplementationModule","implementation_module","Router","_coregateway","_json_sniffers","_raw_sniffers","_locked_ip","_debug","_tellJSONSniffers","Json","_tellRAWSniffers","_sessionnotsupport","Error","_senddata","method","session","wrapped","s","json","NoCrypto","encryptString","encrypted","methods","SP","emitter","handler","rq_rs_pos","rq","rs","actions","NSPS","RsRouter","pos","GT","responsedata","Authenticity","getUserToken","u","p","token","Implementation","onToken","t","AU","CS","Service","ServiceRqRouter","ServiceRsRouter","CA","ActivityRqRouter","ActivityRsRouter","addJSONSniffer","push","addRAWSniffer","emit","importCore","coregateway","Settings","parse","upgradeConnection","succeess","decryptString","decrypted","er","onConnectionClose","setEmitRouter","emitRouter","sendRouterData","spwanClient","_activities","_local_services_owner","_ActivityRsCEcallbacks","_ASockets","_local_services","_entity_module","_emitRouter","ActivitySocketDestroyTimeout","_unbindActivitySocketList","_entity_id","worker_cancel_refer","boolean","importOwner","owner","_entitiesID","loop","theservice","returnEntityValue","deleteEntity","sendSSClose","VE","launch","_emitClose","SS","JF","sendJFReturn","r","CE","_data","response_emit","AS","_emitData","EV","_emitEvent","n","remoteClosed","ActivitySocket","unbindActivitySocketList","_emitdata","_emitclose","_emitjfunc","entity_id","tempid","_launched","wait_ops","wait_launch_ops","_jfqueue","_on_dict","args","apply","TagLog","_on_event","exec","setEntityID","id","entities_prev","concat","returnvalue","call","op","getEntityID","sendData","on","type","onEvent","bundle","splice","setupOwner","username","createActivitySocket","service","o","od","_as","_support_secure","_connection_module","_nsps_list","_implts","generateAESCBC256KeyByHash","string1","string2","toEncrypt","saveRSA2048KeyPair","priv","pub","loadRSA2048KeyPair","signin","password","signup","noti","NSPSRqRouter","status","getClientConnProfile","getDefaultClientConnProfile","importConnectionModule","connection_module","setSecure","isSecure","setImplement","returnImplementBundle","returnNSPSModule","_rsa_pub","_rsa_priv","_resumes","_crypto_module","host_rsa_pub","client_random_num","returnRandomInt","aes_key","a","importCryptoModule","crypto_module","importRSA2048KeyPair","rsa_priv","rsa_pub","Core","_connection","_authorizationhandler","_router","_service","_implementation","_nsps","_nocrypto","max","f","algo","toDecrypt","_cry_algo","AESCBC256","keystr","crypto","subtle","importKey","TextEncoder","encode","then","iv","getRandomValues","encrypt","catch","err2","decrypt","TextDecoder","decode","RSA2048","publicKey","hash","digest","replace","Username","reload","v","pass","open","href","connection_servers","trusted_domains","server","addServer","getImplement","_core","returnUserName","logout","implement_module"],"mappings":"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","sourcesContent":["// NoService/clients/javascript/NSc.js\n// Description:\n// \"NSc.js\" is a NoService framework client.\n// Copyright 2018 NOOXY. All Rights Reserved.\n'use strict';\n\nfunction NSc() {\n\n  let settings = {\n    verbose: true,\n    debug: true,\n    user: null,\n    secure: true,\n    NSc_files_root: '/',\n    connmethod: 'WebSocketSecure',\n    targetip: '0.0.0.0',\n    targetport: 43581\n  };\n\n  let Vars = {\n    'version': 'aphla 0.3.0',\n    'NSP_version': 'aphla 0.4.0',\n    'copyright': 'copyright(c)2018-2019 NOOXY inc.'\n  }\n\n  this.setDebug = (boo)=>{\n    settings.debug = boo;\n  }\n\n  String.prototype.replaceAll = function(search, replacement) {\n      var target = this;\n      return target.split(search).join(replacement);\n  };\n\n  let Utils = {\n    getQueryVariable: (variable)=>{\n           var query = window.location.search.substring(1);\n           var vars = query.split(\"&\");\n           for (var i=0;i<vars.length;i++) {\n                   var pair = vars[i].split(\"=\");\n                   if(pair[0] === variable){return pair[1];}\n           }\n           return(false);\n    },\n    Base64toArrayBuffer: (b64str) => {\n      var raw = window.atob(b64str);\n      var rawLength = raw.length;\n      var array = new Uint8Array(new ArrayBuffer(rawLength));\n      for(let i = 0; i < rawLength; i++) {\n        array[i] = raw.charCodeAt(i);\n      }\n      return array;\n    },\n    convertPemToBinary: (pem)=> {\n      var lines = pem.split('\\n');\n      var encoded = '';\n      for (var i = 0; i < lines.length; i++) {\n        if (lines[i].trim().length > 0 &&\n          lines[i].indexOf('-----BEGIN RSA PRIVATE KEY-----') < 0 &&\n          lines[i].indexOf('-----BEGIN RSA PUBLIC KEY-----') < 0 &&\n          lines[i].indexOf('-----BEGIN PUBLIC KEY-----') < 0 &&\n          lines[i].indexOf('-----END PUBLIC KEY-----') < 0 &&\n          lines[i].indexOf('-----BEGIN PRIVATE KEY-----') < 0 &&\n          lines[i].indexOf('-----END PRIVATE KEY-----') < 0 &&\n          lines[i].indexOf('-----END RSA PRIVATE KEY-----') < 0 &&\n          lines[i].indexOf('-----END RSA PUBLIC KEY-----') < 0) {\n          encoded += lines[i].trim();\n        }\n      }\n      return Utils.Base64toArrayBuffer(encoded)\n    },\n    ArrayBuffertoBase64: (buffer)=> {\n      var binary = '';\n      var bytes = new Uint8Array(buffer);\n      var len = bytes.byteLength;\n      for (var i = 0; i < len; i++) {\n        binary += String.fromCharCode( bytes[ i ] );\n      }\n      return window.btoa( binary );\n    },\n    printLOGO: (version, copyright) => {\n      console.log('88b 88  dP\\'Yb   dP\\'Yb  Yb  dP Yb  dP  TM')\n      console.log('88Yb88 dP   Yb dP   Yb  YbdP   YbdP  ')\n      console.log('88 Y88 Yb   dP Yb   dP  dPYb    88   ')\n      console.log('88  Y8  YbodP   YbodP  dP  Yb   88   Service Framework. ')\n      console.log('')\n      console.log('')\n      console.log('ver. '+version+'. '+copyright)\n      console.log('For more information or update -> www.nooxy.org')\n      console.log('')\n    },\n    setCookie: (cname, cvalue, exdays)=> {\n      console.log(cname, cvalue, exdays);\n      let d = new Date();\n      d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n      let expires = \"expires=\"+d.toUTCString();\n      document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n    },\n    getCookie: (cname)=> {\n        let name = cname + \"=\";\n        let ca = document.cookie.split(';');\n        for(let i = 0; i < ca.length; i++) {\n          let c = ca[i];\n          while (c.charAt(0) === ' ') {\n            c = c.substring(1);\n          }\n          if (c.indexOf(name) === 0) {\n            return c.substring(name.length, c.length);\n          }\n        }\n        return \"\";\n    },\n    eraseCookie: (name)=> {\n      Utils.setCookie(name,\"\",-1);\n    },\n\n    tagLog: (tag, logstring) => {\n      if(typeof(logstring)!='string') {\n        logstring = JSON.stringify(logstring, null, 2);\n      }\n      let _space = 10;\n      tag = tag.substring(0, _space);\n      for(var i=0; i < _space-tag.length; i++) {\n        if(i%2 != 1) {\n          tag = tag + ' ';\n        }\n        else {\n          tag = ' ' + tag;\n        }\n      }\n      console.log('['+tag+'] '+logstring.replaceAll('\\n', '\\n['+tag+'] '));\n    },\n    generateUniqueID: () => {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    },\n    generateGUID: () => {\n      let s4 = () => {\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n      }\n      return s4() + s4() + '-' + s4() + '-' + s4() + '-' +s4() + '-' + s4() + s4() +\n       s4();\n    },\n    searchObject: (object, value)=> {\n      for (let prop in object) {\n        if (object.hasOwnProperty(prop)) {\n          if (object[prop] === value) {\n            return prop;\n          }\n        }\n      }\n    },\n  }\n\n  let Connection = function () {\n    let _default_local_ip_and_port = '';\n    let _servers = {};\n    let _clients = {};\n    let _have_local_server = false;\n    let _virtnet = null;\n    let _blocked_ip = [];\n    let _tcp_ip_chunk_token = '}{\"\"\"}<>';\n    let heartbeat_phrase = '{m:\"HB\"}';\n\n\n    // define an profile of an connection\n    function ConnectionProfile(serverID, Rpos, connMethod, hostip, hostport, clientip, conn) {\n      let _serverID = serverID;\n      let _pos = Rpos;\n      let _connMethod = connMethod;\n      let _bundle = {};\n      let _GUID = Utils.generateGUID();\n      let _hostip = hostip;\n      let _hostport = hostport;\n      let _clientip = clientip;\n      let _conn = conn; // conn is wrapped!\n      if(Rpos === 'Server') {\n        _clients[_GUID] = this;\n      }\n\n      this.closeConnetion = () => {\n        // Utils.tagLog('*ERR*', 'closeConnetion not implemented. Of '+this.type);\n        _conn.closeConnetion(_GUID);\n      };\n\n      this.getServerID = (callback) => {callback(false, _serverID);}\n      this.getHostIP = (callback) => {callback(false, _hostip);}\n      this.getHostPort = (callback) => {callback(false, _hostport);}\n      this.getClientIP = (callback) => {callback(false, _clientip);}\n      this.getConnMethod = (callback) => {callback(false, _connMethod);}\n      this.getRemotePosition = (callback) => {callback(false, _pos);}\n      this.setBundle = (key, value) => {_bundle[key] = value;}\n      this.getBundle = (key, callback) => {callback(false, _bundle[key]);}\n      this.getConn = (callback) => {callback(false, _conn)};\n      this.getGUID = (callback) => {callback(false, _GUID)};\n\n      this.returnServerID = () => {return _serverID;}\n      this.returnHostIP = () => {return _hostip;}\n      this.returnHostPort = () => {return _hostport;}\n      this.returnClientIP = () => {return _clientip;}\n      this.returnConnMethod = () => {return _connMethod;}\n      this.returnRemotePosition = () => {return _pos;}\n      this.returnBundle = (key) => {return _bundle[key];}\n      this.returnConn = () => {return _conn;};\n      this.returnGUID = () => {return _GUID};\n\n      this.destroy= () => {\n        // delete this;\n        delete _clients[_GUID];\n      };\n      // this.onConnectionDropout = () => {\n      //   Utils.tagLog('*ERR*', 'onConnectionDropout not implemented');\n      // }\n\n    }\n\n    function WSClient() {\n      let _ws = null\n\n      this.closeConnetion = () => {\n        _ws.close();\n      };\n\n      this.onData = (connprofile, data) => {Utils.tagLog('*ERR*', 'onData not implemented');};\n\n      this.onClose = () => {Utils.tagLog('*ERR*', 'onClose not implemented');};\n\n      this.send = function(connprofile, data) {\n        try {\n          _ws.send(data);\n        }\n        catch(e) {\n          this.onClose(connprofile);\n          _ws.close();\n        }\n      };\n\n      this.connect = (ip, port, callback) => {\n        let connprofile = null;\n\n        _ws = new WebSocket('ws://'+ip+':'+port);\n        connprofile = new ConnectionProfile(null, 'Server', 'WebSocket', ip, port, 'localhost', this);\n        setTimeout(()=> {\n            if (_ws.readyState != 1) {\n                callback(_ws.readyState);\n            }\n            else {\n              // callback(false);\n            }\n        }, 2000);\n        _ws.onopen = () => {\n          callback(false, connprofile);\n          // ws.send('something');\n        }\n        _ws.onmessage = (event) => {\n          this.onData(connprofile, event.data);\n        }\n\n        _ws.onerror =  (error) => {\n            Utils.tagLog('*ERR*', error);\n            _ws.close();\n            this.onClose(connprofile);\n        }\n\n        _ws.onclose =  () => {\n            this.onClose(connprofile);\n        }\n\n      }\n    };\n\n    function WSSClient() {\n      let _ws = null\n\n      this.closeConnetion = () => {\n        _ws.close();\n      };\n\n      this.onData = (connprofile, data) => {Utils.tagLog('*ERR*', 'onData not implemented');};\n\n      this.onClose = () => {Utils.tagLog('*ERR*', 'onClose not implemented');};\n\n      this.send = function(connprofile, data) {\n        try {\n          _ws.send(data);\n        }\n        catch(e) {\n          this.onClose(connprofile);\n          _ws.close();\n        }\n      };\n\n      this.connect = (ip, port, callback) => {\n        let connprofile = null;\n        _ws = new WebSocket('wss://'+ip+':'+port);\n        connprofile = new ConnectionProfile(null, 'Server', 'WebSocket', ip, port, 'localhost', this);\n        _ws.onopen = () => {\n          callback(false, connprofile);\n          // ws.send('something');\n        }\n        _ws.onmessage = (event) => {\n          this.onData(connprofile, event.data);\n        }\n\n        _ws.onerror =  (error) => {\n            Utils.tagLog('*ERR*', error);\n            _ws.close();\n            this.onClose(connprofile);\n        }\n\n        _ws.onclose =  () => {\n            this.onClose(connprofile);\n        }\n\n      }\n    };\n\n    this.createClient = (conn_method, remoteip, port, callback) => {\n\n      // Heartbeat\n      let onData_wrapped = (connprofile, data)=> {\n        if(data!=heartbeat_phrase) {\n          this.onData(connprofile, data);\n        }\n      };\n\n      if(conn_method === 'ws'||conn_method =='WebSocket') {\n        let serverID = \"WebSocket\";\n        let wsc = new WSClient(_virtnet);\n        wsc.onData = onData_wrapped;\n        wsc.onClose = this.onClose;\n        wsc.connect(remoteip, port, callback);\n      }\n\n      else if(conn_method === 'wss'||conn_method =='WebSocketSecure') {\n        let serverID = \"WebSocketSecure\";\n        let wssc = new WSSClient(_virtnet);\n        wssc.onData = onData_wrapped;\n        wssc.onClose = this.onClose;\n        wssc.connect(remoteip, port, callback);\n      }\n\n      else {\n        Utils.tagLog('*ERR*', ''+conn_method+' not implemented. Skipped.');\n      }\n    };\n\n    this.send = (connprofile, data) => {\n      connprofile.getConn((err, conn) => {\n        conn.send(connprofile, data);\n      });\n    };\n\n    this.onData = (conn_profile, data) => {\n      Utils.tagLog('*ERR*', 'Connection module onData not implement');\n    };\n\n    this.onClose = (connprofile) => {\n      Utils.tagLog('*ERR*', 'Connection module onClose not implement');\n    }\n\n    this.getClients = (callback) => {\n      callback(false, _clients);\n    };\n\n  }\n\n  function AuthorizationHandler() {\n    let _implementation_module = null;\n    let _daemon_auth_key = null;\n    let _trusted_domains = [];\n\n    let _implts_callback = {\n      // Authby password\n      'PW': (connprofile, data, data_sender) => {\n        let AuthbyPassword = _implementation_module.returnImplement('AuthbyPassword');\n        AuthbyPassword(connprofile, data, data_sender);\n      },\n\n      // Authby password failed\n      'PF': (connprofile, data, data_sender) => {\n        let AuthbyPasswordFailed = _implementation_module.returnImplement('AuthbyPasswordFailed');\n        AuthbyPasswordFailed(connprofile, data, data_sender);\n      },\n\n      // Authby token\n      'TK': (connprofile, data, data_sender) => {\n        let AuthbyToken = _implementation_module.returnImplement('AuthbyToken');\n        AuthbyToken(connprofile, data, data_sender);\n      },\n\n      // Authby token failed\n      'TF': (connprofile, data, data_sender) => {\n        let AuthbyTokenFailed = _implementation_module.returnImplement('AuthbyTokenFailed');\n        AuthbyTokenFailed(connprofile, data, data_sender);\n      },\n\n      // Sign in\n      'SI': (connprofile, data, data_sender) => {\n        let Signin = _implementation_module.returnImplement('signin');\n        Signin(connprofile, data, data_sender);\n      }\n    };\n\n    this.RqRouter = (connprofile, data, data_sender) => {\n      _implts_callback[data.m](connprofile, data, data_sender);\n    };\n\n    this.importImplementationModule = (implementation_module) => {\n      _implementation_module = implementation_module;\n    };\n\n    this.close = () =>{\n\n    }\n  };\n\n  let Router = function () {\n    let _coregateway = null;\n    // nooxy service protocol sercure\n    let _json_sniffers = [];\n    let _raw_sniffers = [];\n    // for signup timeout\n    let _locked_ip = [];\n    let _debug;\n\n    let _tellJSONSniffers = (Json) => {\n      if(settings.debug) {\n        Utils.tagLog('DEBUG', Json);\n      };\n      for(let i in _json_sniffers) {\n        _json_sniffers[i](false, Json);\n      }\n    };\n\n    let _tellRAWSniffers = (data) => {\n      for(let i in _raw_sniffers) {\n        _raw_sniffers[i](false, data);\n      }\n    };\n\n    // in case of wrong session of the position\n    let _sessionnotsupport = () => {\n      console.log('[*ERR*] session not support');\n      let err = new Error();\n      throw err;\n    }\n\n    // a convinient function fo sending data\n    let _senddata = (connprofile, method, session, data) => {\n      var wrapped = {\n        m : method,\n        s : session,\n        d : data\n      };\n      let json = JSON.stringify(wrapped);\n      // finally sent the data through the connection.\n      if(connprofile.returnBundle('NSPS') === true) {\n        _coregateway.NoCrypto.encryptString('AESCBC256', connprofile.returnBundle('aes_256_cbc_key'), json, (err, encrypted)=> {\n          _coregateway.Connection.send(connprofile, encrypted);\n        });\n      }\n      else if (connprofile.returnBundle('NSPS') === 'finalize') {\n        connprofile.setBundle('NSPS', true);\n        _coregateway.Connection.send(connprofile, json);\n\n      }\n      else {\n        _coregateway.Connection.send(connprofile, json);\n      }\n    }\n\n    // implementations of NOOXY Service Protocol methods\n    let methods = {\n      // nooxy service protocol implementation of \"sercure protocol\"\n      SP: {\n        emitter : (connprofile, data) => {\n          _senddata(connprofile, 'SP', 'rq', data);\n        },\n\n        handler : (connprofile, session, data) => {\n          let rq_rs_pos = {\n            rq: \"Server\",\n            rs: \"Client\"\n          }\n\n          let actions = {\n            rq : _coregateway.NSPS.RqRouter,\n            rs : _coregateway.NSPS.RsRouter\n          }\n          connprofile.getRemotePosition((err, pos)=> {\n            if(rq_rs_pos[session] === pos || rq_rs_pos[session] === 'Both') {\n              if(session === 'rq') {\n                actions[session](connprofile, data, _senddata);\n              }\n              else {\n                actions[session](connprofile, data);\n              }\n            }\n            else {\n              _sessionnotsupport();\n            }\n          });\n        }\n      },\n\n      // nooxy service protocol implementation of \"get token\"\n      GT: {\n        emitter : (connprofile, data) => {\n          _senddata(connprofile, 'GT', 'rq', data);\n        },\n\n        handler : (connprofile, session, data) => {\n          let rq_rs_pos = {\n            rq: \"Client\",\n            rs: \"Server\"\n          }\n\n          let actions = {\n            rq : (connprofile, data) => {\n                let responsedata = {};\n                _coregateway.Authenticity.getUserToken(data.u, data.p, (err, token)=>{\n                  responsedata['t'] = token;\n                  if(err) {\n                    responsedata['s'] = 'Fail';\n                  }\n                  else {\n                    responsedata['s'] = 'OK';\n                  }\n                  _senddata(connprofile, 'GT', 'rs', responsedata);\n                });\n            },\n\n            rs : (connprofile, data) => {\n              _coregateway.Implementation.onToken(connprofile, data.s, data.t);\n            }\n          }\n          connprofile.getRemotePosition((err, pos)=> {\n            if(rq_rs_pos[session] === pos || rq_rs_pos[session] === 'Both') {\n              if(session === 'rq') {\n                actions[session](connprofile, data, _senddata);\n              }\n              else {\n                actions[session](connprofile, data);\n              }\n            }\n            else {\n              _sessionnotsupport();\n            }\n          });\n        }\n      },\n\n      // nooxy service protocol implementation of \"Authorization\"\n      AU: {\n        emitter : (connprofile, data) => {\n          _senddata(connprofile, 'AU', 'rq', data);\n        },\n\n        handler : (connprofile, session, data) => {\n          let rq_rs_pos = {\n            rq: \"Server\",\n            rs: \"Client\"\n          }\n\n          let actions = {\n            rq : _coregateway.AuthorizationHandler.RqRouter,\n          }\n          connprofile.getRemotePosition((err, pos)=> {\n            if(rq_rs_pos[session] === pos || rq_rs_pos[session] === 'Both') {\n              if(session === 'rq') {\n                actions[session](connprofile, data, _senddata);\n              }\n              else {\n                actions[session](connprofile, data);\n              }\n            }\n            else {\n              _sessionnotsupport();\n            }\n          });\n        }\n      },\n\n      // nooxy service protocol implementation of \"Call Service\"\n      CS: {\n        emitter : (connprofile, data) => {\n          _senddata(connprofile, 'CS', 'rq', data);\n        },\n\n        handler : (connprofile, session, data) => {\n          let rq_rs_pos = {\n            rq: \"Client\",\n            rs: \"Server\"\n          }\n\n          let actions = {\n            rq : _coregateway.Service.ServiceRqRouter,\n            rs : _coregateway.Service.ServiceRsRouter\n          }\n          connprofile.getRemotePosition((err, pos)=> {\n            if(rq_rs_pos[session] === pos || rq_rs_pos[session] === 'Both') {\n              if(session === 'rq') {\n                actions[session](connprofile, data, _senddata);\n              }\n              else {\n                actions[session](connprofile, data);\n              }\n            }\n            else {\n              _sessionnotsupport();\n            }\n          })\n        }\n      },\n\n      // nooxy service protocol implementation of \"Call Activity\"\n      CA: {\n        emitter : (connprofile, data) => {\n          _senddata(connprofile, 'CA', 'rq', data);\n        },\n\n        handler : (connprofile, session, data) => {\n          let rq_rs_pos = {\n            rq: \"Both\",\n            rs: \"Both\"\n          }\n\n          let actions = {\n            rq : _coregateway.Service.ActivityRqRouter,\n            rs : _coregateway.Service.ActivityRsRouter\n          }\n\n          connprofile.getRemotePosition((err, pos)=> {\n            if(rq_rs_pos[session] === pos || rq_rs_pos[session] === 'Both') {\n              if(session === 'rq') {\n                actions[session](connprofile, data, _senddata);\n              }\n              else {\n                actions[session](connprofile, data);\n              }\n            }\n            else {\n              _sessionnotsupport();\n            }\n          });\n        }\n      }\n    }\n\n    this.addJSONSniffer = (callback) => {\n      _json_sniffers.push(callback);\n    };\n\n    this.addRAWSniffer = (callback) => {\n      _raw_sniffers.push(callback);\n    };\n\n    // emit specified method.\n    this.emit = (connprofile, method, data) => {\n      methods[method].emitter(connprofile, data);\n    };\n\n    // import the accessbility of core resource\n    this.importCore = (coregateway) => {\n      _coregateway = coregateway;\n      _debug = _coregateway.Settings.debug;\n\n      // while recieve a data from connection\n      _coregateway.Connection.onData = (connprofile, data) => {\n        _tellRAWSniffers(data);\n        try {\n          if(_coregateway.Settings.secure === true && connprofile.returnConnMethod() != 'Local' && connprofile.returnConnMethod() != 'local') {\n            // upgrade protocol\n            if(connprofile.returnBundle('NSPS') === 'pending') {\n              let json = JSON.parse(data);\n              _tellJSONSniffers(json);\n              methods[json.m].handler(connprofile, json.s, json.d);\n            }\n            else if(connprofile.returnBundle('NSPS') != true && connprofile.returnRemotePosition() === 'Client') {\n              _coregateway.NSPS.upgradeConnection(connprofile, (err, succeess)=>{\n                if(succeess) {\n                  let json = JSON.parse(data);\n                  _tellJSONSniffers(json);\n                  methods[json.m].handler(connprofile, json.s, json.d);\n                }\n                else {\n                  connprofile.closeConnetion();\n                }\n              });\n            }\n            else if(connprofile.returnBundle('NSPS') != true) {\n              let json = JSON.parse(data);\n              _tellJSONSniffers(json);\n              methods[json.m].handler(connprofile, json.s, json.d);\n            }\n            else if(connprofile.returnBundle('NSPS') === true) {\n              // true\n\n              _coregateway.NoCrypto.decryptString('AESCBC256', connprofile.returnBundle('aes_256_cbc_key'), data, (err, decrypted)=> {\n                if(err&&_coregateway.Settings.debug) {\n                  console.log(err);\n                }\n                let json = JSON.parse(decrypted);\n                _tellJSONSniffers(json);\n                methods[json.m].handler(connprofile, json.s, json.d);\n\n              });\n            }\n          }\n          else {\n            let json = JSON.parse(data);\n            _tellJSONSniffers(json);\n            methods[json.m].handler(connprofile, json.s, json.d);\n          }\n        }\n        catch (er) {\n          if(_debug) {\n            Utils.tagLog('*ERR*', 'An error occured in router module.');\n            console.log(er);\n          }\n        }\n      };\n\n      _coregateway.Connection.onClose = (connprofile) => {\n        try {\n          _coregateway.Service.onConnectionClose(connprofile, (err)=>{\n            connprofile.destroy();\n          });\n        }\n        catch (er) {\n          if(_debug) {\n            Utils.tagLog('*WARN*', 'An error occured in router module.');\n            console.log(er);\n          }\n        }\n      };\n\n      _coregateway.Service.setEmitRouter(this.emit);\n      _coregateway.Implementation.emitRouter = this.emit;\n      _coregateway.Implementation.sendRouterData = _senddata;\n      _coregateway.NSPS.emitRouter = this.emit;\n      _coregateway.Service.spwanClient = _coregateway.Connection.createClient;\n\n    };\n\n  };\n\n  let Service = function () {\n    // need add service event system\n    let _activities = {};\n    let _local_services_owner = null;\n    let _ActivityRsCEcallbacks = {};\n    let _ASockets = {};\n    let _debug = false;\n    let _local_services;\n    let _entity_module;\n    let _emitRouter;\n\n    let ActivitySocketDestroyTimeout = 1000;\n\n    let _unbindActivitySocketList = (_entity_id)=> {\n      setTimeout(()=>{\n        // tell worker abort referance\n        if(_ASockets[_entity_id])\n          _ASockets[_entity_id].worker_cancel_refer = true;\n        delete _ASockets[_entity_id];\n      }, ActivitySocketDestroyTimeout);\n    };\n\n    this.setDebug = (boolean) => {\n      _debug = boolean;\n    };\n\n    this.importOwner = (owner) => {\n      _local_services_owner = owner;\n    }\n\n    this.spwanClient = () => {Utils.tagLog('*ERR*', 'spwanClient not implemented');};\n\n    this.setEmitRouter = (emitRouter) => {_emitRouter = emitRouter};\n\n    this.onConnectionClose = (connprofile, callback) => {\n\n      let _entitiesID = connprofile.returnBundle('bundle_entities');\n      if(_entitiesID === null) {\n        callback(true);\n      }\n      else if(_entitiesID.length) {\n        let Rpos = connprofile.returnRemotePosition();\n        if(connprofile.returnRemotePosition() === 'Client') {\n          let i = 0;\n          let loop = () => {\n            let theservice = _local_services[_entity_module.returnEntityValue(_entitiesID[i], 'service')];\n            _entity_module.deleteEntity(_entitiesID[i]);\n            theservice.sendSSClose(_entitiesID[i], (err)=>{\n\n            });\n            if(i < _entitiesID.length-1) {\n              i++;\n              loop();\n            }\n          };\n          loop();\n          callback(false);\n        }\n        else {\n          for(let i in _entitiesID) {\n            _ASockets[_entitiesID[i]].onClose();\n          }\n          callback(false);\n        }\n      }\n      else {\n        callback(false);\n      }\n    };\n\n    // ClientSide\n    this.ServiceRsRouter =  (connprofile, data) => {\n\n      let methods = {\n        // nooxy service protocol implementation of \"Call Service: Vertify Connection\"\n        VE: (connprofile, data) => {\n          if(data.d.s === 'OK') {\n            _ASockets[data.d.i].launch();\n          }\n          else {\n            _ASockets[data.d.i]._emitClose();\n          }\n        },\n        // nooxy service protocol implementation of \"Call Service: ServiceSocket\"\n        SS: (connprofile, data) => {\n\n        },\n        // nooxy service protocol implementation of \"Call Service: JSONfunction\"\n        JF: (connprofile, data) => {\n          if(data.d.s === 'OK') {\n            _ASockets[data.d.i].sendJFReturn(false, data.d.t, data.d.r);\n          }\n          else {\n            _ASockets[data.d.i].sendJFReturn(true, data.d.t, data.d.r);\n          }\n        },\n        // nooxy service protocol implementation of \"Call Activity: createEntity\"\n        CE: (connprofile, data) => {\n\n          // tell server finish create\n          if(data.d.i != null) {\n            // create a description of this service entity.\n            _ActivityRsCEcallbacks[data.d.t](connprofile, data);\n            let _data = {\n              \"m\": \"VE\",\n              \"d\": {\n                \"i\": data.d.i,\n              }\n            };\n\n            _emitRouter(connprofile, 'CS', _data);\n          }\n          else {\n            delete  _ActivityRsCEcallbacks[data.d.t];\n            connprofile.closeConnetion();\n          }\n        }\n      }\n\n      // call the callback.\n      methods[data.m](connprofile, data);\n    };\n\n    // Serverside implement\n    this.ActivityRqRouter = (connprofile, data, response_emit) => {\n\n      let methods = {\n        // nooxy service protocol implementation of \"Call Activity: ActivitySocket\"\n        AS: () => {\n          _ASockets[data.d.i]._emitData(data.d.d);\n          let _data = {\n            \"m\": \"AS\",\n            \"d\": {\n              // status\n              \"i\": data.d.i,\n              \"s\": \"OK\"\n            }\n          };\n          response_emit(connprofile, 'CA', 'rs', _data);\n        },\n        // nooxy service protocol implementation of \"Call Activity: Event\"\n        EV: () => {\n          _ASockets[data.d.i]._emitEvent(data.d.n, data.d.d);\n          let _data = {\n            \"m\": \"EV\",\n            \"d\": {\n              // status\n              \"i\": data.d.i,\n              \"s\": \"OK\"\n            }\n          };\n          response_emit(connprofile, 'CA', 'rs', _data);\n        },\n        // nooxy service protocol implementation of \"Call Activity: Close ActivitySocket\"\n        CS: () => {\n          _ASockets[data.d.i].remoteClosed = true;\n          _ASockets[data.d.i].close();\n        }\n      }\n      // call the callback.\n      methods[data.m](connprofile, data.d, response_emit);\n    }\n\n\n    function ActivitySocket(conn_profile, emitRouter, unbindActivitySocketList, debug) {\n      // Service Socket callback\n      let _emitdata = (i, d) => {\n        let _data = {\n          \"m\": \"SS\",\n          \"d\": {\n            \"i\": i,\n            \"d\": d,\n          }\n        };\n        emitRouter(conn_profile, 'CS', _data);\n      }\n\n      // Service Socket callback\n      let _emitclose = (i) => {\n        let _data = {\n          \"m\": \"CS\",\n          \"d\": {\n            \"i\": i\n          }\n        };\n        emitRouter(conn_profile, 'CS', _data);\n      }\n\n      let _emitjfunc = (entity_id, name, tempid, Json)=> {\n        let _data = {\n          \"m\": \"JF\",\n          \"d\": {\n            \"i\": entity_id,\n            \"n\": name,\n            \"j\": JSON.stringify(Json),\n            \"t\": tempid\n          }\n        };\n        emitRouter(conn_profile, 'CS', _data);\n      }\n\n      let _entity_id = null;\n      let _launched = false;\n\n      let wait_ops = [];\n      let wait_launch_ops = [];\n      let _jfqueue = {};\n      let _on_dict = {\n        data: (...args)=> {\n          if(this.onData) {\n            this.onData.apply(null, args);\n          }\n          else if(debug) Utils.TagLog('*WARN*', 'ActivitySocket on \"data\" not implemented')\n        },\n        close: (...args)=> {\n          if(this.onClose) {\n            this.onClose.apply(null, args);\n          }\n          else if(debug) Utils.TagLog('*WARN*', 'ActivitySocket on \"close\" not implemented')\n        }\n      };\n\n      let _on_event = {\n\n      };\n\n      // For waiting connection is absolutly established. We need to wrap operations and make it queued.\n      let exec = (callback) => {\n        if(_launched != false) {\n          callback();\n        }\n        else {\n          wait_ops.push(callback);\n        }\n      };\n\n      this.launch = () => {\n        _launched = true;\n        for(let i in wait_ops) {\n          wait_ops[i]();\n        }\n      };\n\n      this.setEntityID = (id) => {\n        _entity_id = id;\n        let entities_prev = conn_profile.returnBundle('bundle_entities');\n        if(entities_prev != null) {\n          conn_profile.setBundle('bundle_entities', [_entity_id].concat(entities_prev));\n        }\n        else {\n          conn_profile.setBundle('bundle_entities', [_entity_id]);\n        }\n      };\n\n      this.sendJFReturn = (err, tempid, returnvalue) => {\n        if(err) {\n          _jfqueue[tempid](err);\n        }\n        else {\n          _jfqueue[tempid](err, JSON.parse(returnvalue));\n        }\n      };\n\n      // JSONfunction call\n      this.call = (name, Json, callback) => {\n        let op = ()=> {\n          let tempid = Utils.generateUniqueID();\n          _jfqueue[tempid] = (err, returnvalue) => {\n            callback(err, returnvalue);\n          };\n          _emitjfunc(_entity_id, name, tempid, Json);\n        };\n        exec(op);\n      }\n\n      this.getEntityID = (callback) => {\n        callback(false, _entity_id);\n      };\n\n      this.sendData = (data) => {\n        let op = ()=> {\n          _emitdata(_entity_id, data);\n        };\n        exec(op);\n      };\n\n      this.on = (type, callback)=> {\n        _on_dict[type] = callback;\n      };\n\n      this.onEvent = (event, callback)=> {\n        _on_event[event] = callback;\n      };\n\n      this._emitData = (data) => {\n        _on_dict['data'](false, data);\n      };\n\n      this._emitEvent = (event, data)=> {\n        if(_on_event[event])\n          _on_event[event](false, data);\n      };\n\n      this._emitClose = () => {\n        _on_dict['close'](false);\n      };\n\n      this.remoteClosed = false;\n\n      this.unbindActivitySocketList = ()=> {\n        Utils.TagLog('*ERR*', '_aftercloseLaunched not implemented');\n      };\n\n      this.close = () => {\n        let op = ()=> {\n          if(!this.remoteClosed)\n            _emitclose(_entity_id);\n          this._emitClose();\n          let bundle = conn_profile.returnBundle('bundle_entities');\n          for (let i=bundle.length-1; i>=0; i--) {\n            if (bundle[i] === _entity_id) {\n              unbindActivitySocketList(_entity_id);\n              bundle.splice(i, 1);\n            }\n          }\n          conn_profile.setBundle('bundle_entities', bundle);\n          if(bundle.length === 0) {\n            conn_profile.closeConnetion();\n          }\n        }\n        exec(op);\n      };\n    };\n\n\n    // Service module launch\n    this.launch = () => {\n\n    };\n\n    // Service module Owner\n    this.setupOwner = (username) => {\n      _local_services_owner = username;\n    };\n\n    // Service module create activity socket\n    this.createActivitySocket = (method, targetip, targetport, service, callback) => {\n      let err = false;\n      let _data = {\n        \"m\": \"CE\",\n        \"d\": {\n          t: Utils.generateGUID(),\n          o: _local_services_owner,\n          m: 'normal',\n          s: service,\n          od: targetip,\n        }\n      };\n\n      this.spwanClient(method, targetip, targetport, (err, connprofile) => {\n        if(err) {\n          callback(err);\n        }\n        else {\n          let _as = new ActivitySocket(connprofile, _emitRouter, _unbindActivitySocketList, _debug);\n          _ActivityRsCEcallbacks[_data.d.t] = (connprofile, data) => {\n            if(data.d.i != \"FAIL\") {\n              _as.setEntityID(data.d.i);\n              connprofile.setBundle('entityID', data.d.i);\n              _ASockets[data.d.i] = _as;\n              callback(false, _ASockets[data.d.i]);\n            }\n            else{\n              callback(true, _ASockets[data.d.i]);\n            }\n\n          }\n          _emitRouter(connprofile, 'CS', _data);\n        }\n      });\n    };\n  };\n\n  let Implementation = function() {\n    let _support_secure = false;\n    let _connection_module = null;\n\n    // NOOXY service protocol secure list\n    let _nsps_list = ['generateAESCBC256KeyByHash', 'encryptString', 'decryptString'];\n\n    let _implts = {\n\n      // NOOXY service protocol sercure\n\n        // hashing two string (host and client pub key)by SHA256 to get AES-CBC 256 key 32 char\n        generateAESCBC256KeyByHash: (string1, string2, callback) => {\n          Utils.tagLog('*ERR*', 'generateAESCBC256KeyByHash not implemented');\n          callback(true, 'hash 32 char');\n        },\n\n        encryptString: (key, toEncrypt, callback) => {\n          Utils.tagLog('*ERR*', 'generateAESCBC256KeyByHash not implemented');\n          callback(true, 'encrypted');\n        },\n\n        decryptString: (key, toEncrypt, callback) => {\n          Utils.tagLog('*ERR*', 'generateAESCBC256KeyByHash not implemented');\n          callback(true, 'decrypted');\n        },\n\n        saveRSA2048KeyPair: (priv, pub) => {\n          Utils.tagLog('*ERR*', 'saveRSA2048KeyPair not implemented');\n        },\n\n        loadRSA2048KeyPair: (callback) => {\n          Utils.tagLog('*ERR*', 'loadRSA2048KeyPair not implemented');\n          callback(true, 'priv', 'pub');\n        },\n\n      // NOOXY service protocol sercure end\n\n      // return for Server\n      AuthbyToken: (callback) => {\n        Utils.tagLog('*ERR*', 'AuthbyToken not implemented');\n        callback(true, 'token');\n      },\n\n      AuthbyTokenFailed: () => {\n        Utils.tagLog('*ERR*', 'AuthbyTokenFailed not implemented');\n      },\n\n      // return for Server\n      AuthbyPassword: (callback) => {\n        Utils.tagLog('*ERR*', 'AuthbyPassword not implemented');\n        callback(true, 'password');\n      },\n\n      AuthbyPasswordFailed: () => {\n        Utils.tagLog('*ERR*', 'AuthbyPasswordFailed not implemented');\n      },\n\n      // return for Client\n      signin: (conn_method, remoteip, port, username, password, callback) => {\n        Utils.tagLog('*ERR*', 'signin not implemented');\n        callback(true, 'token');\n      },\n\n      // return for Client\n      signup: (conn_method, remoteip, port, username, password, callback) => {\n        Utils.tagLog('*ERR*', 'signup not implemented');\n        callback(true, 'token');\n      },\n\n      onToken: (err, token) => {\n        Utils.tagLog('*ERR*', 'onToken not implemented');\n      },\n\n      // for Server\n      noti: () => {\n\n      },\n\n      AuthbyPassword: null,\n\n      AuthbyAction: null\n    };\n\n    // Nooxy service protocol sercure request\n    this.NSPSRqRouter = (connprofile, data, data_sender) => {\n\n    };\n\n    this.onToken = (connprofile, status, token)=> {\n      if(status === 'OK') {\n        _implts['onToken'](false, token);\n      }\n      else {\n        _implts['onToken'](true);\n      }\n    };\n\n    this.emitRouter = () => {Utils.tagLog('*ERR*', 'emitRouter not implemented');};\n\n    this.sendRouterData = () => {Utils.tagLog('*ERR*', 'sendRouterData not implemented');};\n    // get a temporary ConnectionProfile\n    this.getClientConnProfile = (conn_method, remoteip, port, callback) => {\n      _connection_module.createClient(conn_method, remoteip, port, callback);\n    }\n\n    this.getDefaultClientConnProfile = (callback) => {\n      _connection_module.createClient(settings.connmethod, settings.targetip, settings.targetport, callback);\n    }\n\n    this.importConnectionModule = (connection_module) => {\n      _connection_module = connection_module;\n    };\n\n    this.setSecure = (boolean)=>{\n\n    };\n\n    this.isSecure = (boolean)=>{\n\n    };\n\n    this.setImplement = (name, callback) => {\n      _implts[name] = callback;\n    };\n\n    this.returnImplement = (name) => {\n      return _implts[name];\n    };\n\n    this.returnImplementBundle = () => {\n      return _implts;\n    };\n\n    this.returnNSPSModule = () =>{\n\n    };\n\n    this.close = () => {};\n  }\n\n  let NSPS = function () {\n    let _rsa_pub = null;\n    let _rsa_priv = null;\n    let _resumes = {};\n    let _crypto_module = null;\n\n    this.emitRouter = () => {console.log('[*ERR*] emit not implemented');};\n\n    // Nooxy service protocol sercure request ClientSide\n    // in client need to be in implementation module\n    this.RqRouter = (connprofile, data, data_sender) => {\n\n      let host_rsa_pub = data.p;\n      let client_random_num = _crypto_module.returnRandomInt(99999);\n      connprofile.setBundle('host_rsa_pub_key', host_rsa_pub);\n      _crypto_module.generateAESCBC256KeyByHash(host_rsa_pub, client_random_num, (err, aes_key) => {\n        connprofile.setBundle('aes_256_cbc_key', aes_key);\n        let _data = {\n          r: client_random_num,\n          a: aes_key// aes key to vertify\n        };\n        _crypto_module.encryptString('RSA2048', host_rsa_pub, JSON.stringify(_data), (err, encrypted)=>{\n          connprofile.setBundle('NSPS', 'finalize');\n          data_sender(connprofile, 'SP', 'rs', encrypted);\n        });\n      });\n    };\n\n    this.upgradeConnection = (connprofile, callback) => {\n      _resumes[connprofile.returnGUID()] = callback;\n      let _data = {\n        p: _rsa_pub// RSA publicKey\n      };\n      connprofile.setBundle('NSPS', 'pending');\n      this.emitRouter(connprofile, 'SP', _data);\n    }\n\n    this.importCryptoModule = (crypto_module) => {\n      _crypto_module = crypto_module;\n    }\n\n    this.importRSA2048KeyPair = (rsa_priv, rsa_pub) => {\n      _rsa_priv = rsa_priv;\n      _rsa_pub = rsa_pub;\n    };\n  };\n\n  let Core = function() {\n    let verbose = (tag, log) => {\n      if(settings.verbose||settings.debug) {\n        Utils.tagLog(tag, log);\n      };\n    };\n    // setup variables\n    verbose('Daemon', 'Setting up variables.')\n    let _connection = new Connection();\n    let _authorizationhandler = new AuthorizationHandler();\n    let _router = new Router();\n    let _service = new Service();\n    let _implementation = new Implementation();\n    let _nsps;\n\n    let _nocrypto = {\n      returnRandomInt: (max)=>{\n        let f = _implementation.returnImplement('returnRandomInt');\n        return f(max);\n      },\n      generateAESCBC256KeyByHash: (string1, string2, callback) => {\n        let f = _implementation.returnImplement('generateAESCBC256KeyByHash');\n        f(string1, string2, callback);\n      },\n      encryptString: (algo, key, toEncrypt, callback)=>{\n        let f = _implementation.returnImplement('encryptString');\n        f(algo, key, toEncrypt, callback);\n      },\n      decryptString: (algo, key, toDecrypt, callback) => {\n        let f = _implementation.returnImplement('decryptString');\n        f(algo, key, toDecrypt, callback);\n      }\n    };\n    _nsps = new NSPS();\n\n    this.launch = () => {\n      Utils.printLOGO(Vars.version, Vars.copyright);\n\n      let _cry_algo = {\n        // key is in length 32 char\n        AESCBC256: {\n          encryptString: (keystr, toEncrypt, callback) => {\n            window.crypto.subtle.importKey(\n                \"raw\", //can be \"jwk\" or \"raw\"\n                new TextEncoder('utf-8').encode(keystr),\n                {   //this is the algorithm options\n                    name: \"AES-CBC\",\n                },\n                false, //whether the key is extractable (i.e. can be used in exportKey)\n                [\"encrypt\", \"decrypt\"] //can be \"encrypt\", \"decrypt\", \"wrapKey\", or \"unwrapKey\"\n            )\n            .then((key)=>{\n              let iv = new Uint8Array(16);\n              window.crypto.getRandomValues(iv);\n              toEncrypt = new TextEncoder('utf-8').encode(toEncrypt);\n              window.crypto.subtle.encrypt(\n                {\n                    name: \"AES-CBC\",\n                    iv: iv, //The initialization vector you used to encrypt\n                },\n                key, //from generateKey or importKey above\n                toEncrypt //ArrayBuffer of the data\n              )\n              .then((encrypted)=>{;\n                callback(false, Utils.ArrayBuffertoBase64(iv)+Utils.ArrayBuffertoBase64(encrypted));\n              })\n              .catch((err2)=>{\n                console.error(err2);\n              });\n            })\n            .catch((err)=>{\n                console.error(err);\n            });\n          },\n          decryptString: (keystr, toDecrypt, callback) => {\n            window.crypto.subtle.importKey(\n                \"raw\", //can be \"jwk\" or \"raw\"\n                new TextEncoder('utf-8').encode(keystr),\n                {   //this is the algorithm options\n                    name: \"AES-CBC\",\n                },\n                false, //whether the key is extractable (i.e. can be used in exportKey)\n                [\"encrypt\", \"decrypt\"] //can be \"encrypt\", \"decrypt\", \"wrapKey\", or \"unwrapKey\"\n            )\n            .then((key)=>{\n              let iv = Utils.Base64toArrayBuffer(toDecrypt.substring(0, 24));\n              toDecrypt = Utils.Base64toArrayBuffer(toDecrypt.substring(24));\n              window.crypto.subtle.decrypt(\n                {\n                    name: \"AES-CBC\",\n                    iv: iv, //The initialization vector you used to encrypt\n                },\n                key, //from generateKey or importKey above\n                toDecrypt //ArrayBuffer of the data\n              )\n              .then((decrypted)=>{;\n                callback(false, new TextDecoder('utf-8').decode(decrypted));\n              })\n              .catch((err2)=>{\n                console.error(err2);\n              });\n            })\n            .catch((err)=>{\n                console.error(err);\n            });\n          }\n        },\n\n        // Keys is in pem format\n        RSA2048: {\n          encryptString: (publicKey, toEncrypt, callback) => {\n            window.crypto.subtle.importKey(\n              \"spki\", //can be \"jwk\" (public or private), \"spki\" (public only), or \"pkcs8\" (private only)\n              Utils.convertPemToBinary(publicKey),\n              {   //these are the algorithm options\n                  name: \"RSA-OAEP\",\n                  hash: {name: \"SHA-1\"}, //can be \"SHA-1\", \"SHA-256\", \"SHA-384\", or \"SHA-512\"\n              },\n              false, //whether the key is extractable (i.e. can be used in exportKey)\n              [\"encrypt\"] //\"encrypt\" or \"wrapKey\" for public key import or\n                          //\"decrypt\" or \"unwrapKey\" for private key imports\n            )\n            .then((key)=> {\n                //returns a publicKey (or privateKey if you are importing a private key)\n              window.crypto.subtle.encrypt({\"name\": \"RSA-OAEP\"}, key, new TextEncoder('utf-8').encode(toEncrypt)).then((encrypted)=>{\n                callback(false, Utils.ArrayBuffertoBase64(encrypted));\n              });\n\n            })\n            .catch((err)=>{\n                console.log(err);\n            });\n\n          }\n        },\n\n      }\n\n      _implementation.setImplement('returnRandomInt', (max)=>{\n        return Math.floor(Math.random() * Math.floor(max));\n      });\n      _implementation.setImplement('generateAESCBC256KeyByHash', (string1, string2, callback)=>{\n        window.crypto.subtle.digest(\"SHA-256\", new TextEncoder('utf-8').encode(string1+string2)).then((hash)=> {\n          callback(false, (Utils.ArrayBuffertoBase64(hash)).substring(0, 32));\n        });\n      });\n      _implementation.setImplement('encryptString', (algo, key, toEncrypt, callback)=>{\n        _cry_algo[algo].encryptString(key, toEncrypt, callback);\n      });\n      _implementation.setImplement('decryptString', (algo, key, toDecrypt, callback)=>{\n        _cry_algo[algo].decryptString(key, toDecrypt, callback);\n      });\n      // setup NoService Auth implementation\n      _implementation.setImplement('signin', (connprofile, data, data_sender)=>{\n        // top.location.replace(settings.NSc_files_root+'login.html?conn_method='+settings.connmethod+'&remote_ip='+settings.targetip+'&port='+settings.targetport+'&redirect='+top.window.location.href);\n        // window.open('.html.html?conn_method='+conn_method+'&remote_ip='+remote_ip+'&port='+port);\n      });\n\n      _implementation.setImplement('onToken', (err, token)=>{\n        Utils.setCookie('NSToken', token, 7);\n        if(Utils.getQueryVariable('redirect')) {\n          window.location.replace(Utils.getQueryVariable('redirect'));\n        }\n      });\n\n      _implementation.setImplement('setUser', (err, username)=>{\n        Utils.setCookie('NSUser', username, 365);\n        if(!username) {\n          Utils.eraseCookie('NSUser');\n        }\n      });\n\n      _implementation.setImplement('logout', (err, Username)=>{\n        Utils.eraseCookie('NSUser');\n        Utils.eraseCookie('NSToken');\n        window.location.reload();\n      });\n\n      _implementation.setImplement('AuthbyTokenFailed', (connprofile, data, data_sender)=>{\n        _implementation.returnImplement('signin')(connprofile, data, data_sender, 'token');\n      });\n\n      // setup NoService Auth implementation\n      _implementation.setImplement('AuthbyToken', (connprofile, data, data_sender) => {\n        let callback = (err, token)=>{\n          let _data = {\n            m:'TK',\n            d:{\n              t: data.d.t,\n              v: token\n            }\n          }\n          data_sender(connprofile, 'AU', 'rs', _data);\n        };\n\n        let pass = true;\n        if(Utils.getCookie('NSToken') === null) {\n          _implementation.returnImplement('signin')(connprofile, data, data_sender, 'token');\n        }\n        else {\n          callback(false, Utils.getCookie('NSToken'));\n        }\n\n      });\n      // setup NoService Auth implementation\n\n      _implementation.setImplement('AuthbyPassword', (connprofile, data, data_sender) => {\n        window.open(settings.NSc_files_root+'password.html?conn_method='+settings.connmethod+'&remote_ip='+settings.targetip+'&port='+settings.targetport+'&username='+settings.user+'&authtoken='+data.d.t+'&redirect='+window.location.href);\n      });\n\n        // create gateway\n        verbose('Daemon', 'Creating coregateway...')\n        let coregateway = {\n            Settings: settings,\n            AuthorizationHandler: _authorizationhandler,\n            Service : _service,\n            Connection: _connection,\n            Router: _router,\n            Implementation: _implementation,\n            NoCrypto: _nocrypto,\n            NSPS: _nsps\n          };\n        verbose('Daemon', 'Creating coregateway done.')\n\n      for(let i in settings.connection_servers) {\n        settings.trusted_domains.push(settings.connection_servers[i].ip);\n      }\n\n      // setup NOOXY Service protocol secure\n      _nsps.importCryptoModule(_nocrypto);\n      // setup router\n      _router.importCore(coregateway);\n\n      // setup connection\n      for(var server in settings.connection_servers) {\n        _connection.addServer(settings.connection_servers[server].type,\n           settings.connection_servers[server].ip, settings.connection_servers[server].port);\n      }\n\n      // setup implementation\n      _implementation.importConnectionModule(_connection);\n\n      // setup AuthorizationHandler\n      _authorizationhandler.importImplementationModule(_implementation);\n\n      // setup service\n      _service.setDebug(settings.debug);\n      _service.importOwner(settings.user);\n\n\n      verbose('Daemon', 'Setting up variables done.');\n\n      // launch services\n      verbose('Daemon', 'Launching service module...');\n      _service.launch();\n      verbose('Daemon', 'Launching service module done.');\n      //\n      verbose('Daemon', 'NOOXY Service Framework successfully started.');\n\n    }\n\n    this.getImplement = (callback) => {\n      callback(false, _implementation);\n    };\n\n    this.createActivitySocket = (method, targetip, targetport, service, callback) => {\n      _service.createActivitySocket(method, targetip, targetport, service, callback);\n    };\n\n  }\n\n  let _core = new Core();\n\n  this.createActivitySocket = (service, callback) => {\n    _core.createActivitySocket(settings.connmethod, settings.targetip, settings.targetport, service, callback);\n  };\n\n  this.getImplement = (callback)=>{\n    _core.getImplement(callback);\n  };\n\n  this.returnUserName = ()=>{\n    return settings.user;\n  }\n\n  this.logout = () => {\n    _core.getImplement((err, implement_module)=>{\n      implement_module.returnImplement('logout')();\n    });\n  }\n\n  this.connect = (targetip, method, targetport) => {\n    if(targetip) {\n      settings.targetip = targetip;\n    }\n\n    if(settings.debug) {\n      settings.connmethod = 'WebSocket';\n      settings.targetport = 43582;\n    }\n\n    if(method) {\n      settings.connmethod = method;\n    }\n\n    if(method=='WebSocketSecure') {\n      settings.targetport = 43581;\n    }\n    else if (method=='WebSocket') {\n      settings.targetport = 43582;\n    }\n\n    if(targetport) {\n      settings.targetport = targetport;\n    }\n\n    settings.user = Utils.getCookie('NSUser');\n    if(settings.user == \"\") {\n      settings.user = null;\n    };\n    try {\n      _core.launch();\n    }\n    catch(e) {\n      settings.connmethod = 'WebSocket';\n      _core.launch();\n    }\n  };\n}\n\n// module.exports = NSc;\nexport default NSc;\n"]},"metadata":{},"sourceType":"module"}