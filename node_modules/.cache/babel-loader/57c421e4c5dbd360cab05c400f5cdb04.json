{"ast":null,"code":"import _defineProperty from \"/Users/yves/Software-Dev/NoService-Account/noservice-account/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\n// /src/flux/service.js\n// Description:\n// \"service.js\"\n// Copyright 2018-2020 NOOXY. All Rights Reserved.\nfunction Service(NoService, Dispatcher) {\n  var Services = {\n    NoTalk: null,\n    gotoandPlay: null\n  };\n\n  var setupOnline = function setupOnline() {\n    try {// NoService.createActivitySocket('NoUser', (err, NoTalk)=> {\n      // });\n    } catch (e) {\n      setTimeout(setupOnline, 15 * 1000);\n    }\n  };\n\n  this.Actions = _defineProperty({\n    updateLang: function updateLang(lang) {\n      Dispatcher.dispatch({\n        type: 'updateLang',\n        data: lang\n      });\n    }\n  }, \"updateLang\", function updateLang(lang) {\n    Dispatcher.dispatch({\n      type: 'updateLang',\n      data: lang\n    });\n  });\n}","map":{"version":3,"sources":["/Users/yves/Software-Dev/NoService-Account/noservice-account/src/flux/service.js"],"names":["Service","NoService","Dispatcher","Services","NoTalk","gotoandPlay","setupOnline","e","setTimeout","Actions","updateLang","lang","dispatch","type","data"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA,SAASA,OAAT,CAAiBC,SAAjB,EAA4BC,UAA5B,EAAwC;AACtC,MAAIC,QAAQ,GAAG;AACbC,IAAAA,MAAM,EAAE,IADK;AAEbC,IAAAA,WAAW,EAAE;AAFA,GAAf;;AAKA,MAAIC,WAAW,GAAG,SAAdA,WAAc,GAAK;AACrB,QAAI,CACF;AACA;AACD,KAHD,CAIA,OAAOC,CAAP,EAAU;AACRC,MAAAA,UAAU,CAACF,WAAD,EAAc,KAAG,IAAjB,CAAV;AACD;AACF,GARD;;AAUA,OAAKG,OAAL;AACEC,IAAAA,UAAU,EAAE,oBAACC,IAAD,EAAS;AACnBT,MAAAA,UAAU,CAACU,QAAX,CAAoB;AAACC,QAAAA,IAAI,EAAE,YAAP;AAAqBC,QAAAA,IAAI,EAAEH;AAA3B,OAApB;AACD;AAHH,mBAKc,oBAACA,IAAD,EAAS;AACnBT,IAAAA,UAAU,CAACU,QAAX,CAAoB;AAACC,MAAAA,IAAI,EAAE,YAAP;AAAqBC,MAAAA,IAAI,EAAEH;AAA3B,KAApB;AACD,GAPH;AASD","sourcesContent":["// /src/flux/service.js\n// Description:\n// \"service.js\"\n// Copyright 2018-2020 NOOXY. All Rights Reserved.\n\nfunction Service(NoService, Dispatcher) {\n  let Services = {\n    NoTalk: null,\n    gotoandPlay: null\n  };\n\n  let setupOnline = ()=> {\n    try {\n      // NoService.createActivitySocket('NoUser', (err, NoTalk)=> {\n      // });\n    }\n    catch (e) {\n      setTimeout(setupOnline, 15*1000);\n    }\n  };\n\n  this.Actions = {\n    updateLang: (lang)=> {\n      Dispatcher.dispatch({type: 'updateLang', data: lang});\n    },\n\n    updateLang: (lang)=> {\n      Dispatcher.dispatch({type: 'updateLang', data: lang});\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}